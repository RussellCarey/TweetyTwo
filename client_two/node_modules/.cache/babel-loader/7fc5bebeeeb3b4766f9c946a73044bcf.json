{"ast":null,"code":"import axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../../types/errors\";\nexport const uploadImageFile = async image => {\n  // Upload image to server\n  const data = new FormData();\n  data.append(\"image\", image, `${image.name}`);\n\n  try {\n    const imagePost = await axios.request({\n      method: \"POST\",\n      withCredentials: true,\n      url: `http://localhost:3333/api/post/addImage`,\n      data,\n      headers: {\n        authorization: `${Cookies.get(\"token\")}`\n      }\n    });\n    return imagePost.data;\n  } catch (error) {\n    return ERequestOutcomes.hasError;\n  }\n};\nexport const uploadTweet = async (tweet, uploadAttempt) => {\n  try {\n    const post = await axios.request({\n      method: \"POST\",\n      withCredentials: true,\n      url: `http://localhost:3333/api/post/message`,\n      data: {\n        date: tweet.date,\n        time: tweet.time,\n        message: tweet.message,\n        imageURL: uploadAttempt.url,\n        imageName: uploadAttempt.name\n      },\n      headers: {\n        authorization: `${Cookies.get(\"token\")}`\n      }\n    });\n    return post;\n  } catch {\n    return ERequestOutcomes.hasError;\n  }\n};","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/components/create-window/services/dbServices.ts"],"names":["axios","Cookies","ERequestOutcomes","uploadImageFile","image","data","FormData","append","name","imagePost","request","method","withCredentials","url","headers","authorization","get","error","hasError","uploadTweet","tweet","uploadAttempt","post","date","time","message","imageURL","imageName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AAGA,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAP,IAAuB;AACpD;AACA,QAAMC,IAAc,GAAG,IAAIC,QAAJ,EAAvB;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBH,KAArB,EAA6B,GAAEA,KAAK,CAACI,IAAK,EAA1C;;AAEA,MAAI;AACF,UAAMC,SAAS,GAAG,MAAMT,KAAK,CAACU,OAAN,CAAc;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,eAAe,EAAE,IAFmB;AAGpCC,MAAAA,GAAG,EAAG,yCAH8B;AAIpCR,MAAAA,IAJoC;AAKpCS,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,GAAEd,OAAO,CAACe,GAAR,CAAY,OAAZ,CAAqB;AADhC;AAL2B,KAAd,CAAxB;AAUA,WAAOP,SAAS,CAACJ,IAAjB;AACD,GAZD,CAYE,OAAOY,KAAP,EAAc;AACd,WAAOf,gBAAgB,CAACgB,QAAxB;AACD;AACF,CApBM;AAsBP,OAAO,MAAMC,WAAW,GAAG,OAAOC,KAAP,EAA4BC,aAA5B,KAA8D;AACvF,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMtB,KAAK,CAACU,OAAN,CAAc;AAC/BC,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,eAAe,EAAE,IAFc;AAG/BC,MAAAA,GAAG,EAAG,wCAHyB;AAI/BR,MAAAA,IAAI,EAAE;AACJkB,QAAAA,IAAI,EAAEH,KAAK,CAACG,IADR;AAEJC,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAFR;AAGJC,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAHX;AAIJC,QAAAA,QAAQ,EAAEL,aAAa,CAACR,GAJpB;AAKJc,QAAAA,SAAS,EAAEN,aAAa,CAACb;AALrB,OAJyB;AAW/BM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,GAAEd,OAAO,CAACe,GAAR,CAAY,OAAZ,CAAqB;AADhC;AAXsB,KAAd,CAAnB;AAgBA,WAAOM,IAAP;AACD,GAlBD,CAkBE,MAAM;AACN,WAAOpB,gBAAgB,CAACgB,QAAxB;AACD;AACF,CAtBM","sourcesContent":["import axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../../types/errors\";\nimport { ITweetObject, IUploadAttempt } from \"../types/types\";\n\nexport const uploadImageFile = async (image: File) => {\n  // Upload image to server\n  const data: FormData = new FormData();\n  data.append(\"image\", image, `${image.name}`);\n\n  try {\n    const imagePost = await axios.request({\n      method: \"POST\",\n      withCredentials: true,\n      url: `http://localhost:3333/api/post/addImage`,\n      data,\n      headers: {\n        authorization: `${Cookies.get(\"token\")}`,\n      },\n    });\n\n    return imagePost.data;\n  } catch (error) {\n    return ERequestOutcomes.hasError;\n  }\n};\n\nexport const uploadTweet = async (tweet: ITweetObject, uploadAttempt: IUploadAttempt) => {\n  try {\n    const post = await axios.request({\n      method: \"POST\",\n      withCredentials: true,\n      url: `http://localhost:3333/api/post/message`,\n      data: {\n        date: tweet.date,\n        time: tweet.time,\n        message: tweet.message,\n        imageURL: uploadAttempt.url,\n        imageName: uploadAttempt.name,\n      },\n      headers: {\n        authorization: `${Cookies.get(\"token\")}`,\n      },\n    });\n\n    return post;\n  } catch {\n    return ERequestOutcomes.hasError;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}