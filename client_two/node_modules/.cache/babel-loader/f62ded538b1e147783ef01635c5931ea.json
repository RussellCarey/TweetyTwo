{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/context/modal/ModalState.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { SHOW_MODAL, RESET_MODAL, HIDE_MODAL } from \"./types\";\nimport ModalContext from \"./ModalContext\";\nimport ModalReducer from \"./ModalReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalState = props => {\n  _s();\n\n  const state = {\n    show: false,\n    text: \"\",\n    type: null\n  };\n  const [modalState, dispatch] = useReducer(ModalReducer, state);\n\n  const showModal = (text, type) => {\n    const payload = {\n      text: text,\n      show: true,\n      type: type\n    };\n    dispatch({\n      type: SHOW_MODAL,\n      payload: payload\n    });\n  };\n\n  const hideModal = () => {\n    const payload = { ...modalState,\n      show: false\n    };\n    dispatch({\n      type: HIDE_MODAL,\n      payload: payload\n    });\n  };\n\n  const resetModal = () => {\n    const payload = {\n      text: \"\",\n      show: false\n    };\n    dispatch({\n      type: RESET_MODAL,\n      payload: payload\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      modalState,\n      showModal,\n      hideModal,\n      resetModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalState, \"7H/2McSG1WTKmPKUf6x8ipjTylk=\");\n\n_c = ModalState;\nexport default ModalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalState\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/context/modal/ModalState.tsx"],"names":["React","useReducer","SHOW_MODAL","RESET_MODAL","HIDE_MODAL","ModalContext","ModalReducer","ModalState","props","state","show","text","type","modalState","dispatch","showModal","payload","hideModal","resetModal","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAiF,SAAjF;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAmB;AAAA;;AACpC,QAAMC,KAAkB,GAAG;AACzBC,IAAAA,IAAI,EAAE,KADmB;AAEzBC,IAAAA,IAAI,EAAE,EAFmB;AAGzBC,IAAAA,IAAI,EAAE;AAHmB,GAA3B;AAMA,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBb,UAAU,CAACK,YAAD,EAAeG,KAAf,CAAzC;;AAEA,QAAMM,SAAS,GAAG,CAACJ,IAAD,EAAeC,IAAf,KAAgC;AAChD,UAAMI,OAAO,GAAG;AAAEL,MAAAA,IAAI,EAAEA,IAAR;AAAcD,MAAAA,IAAI,EAAE,IAApB;AAA0BE,MAAAA,IAAI,EAAEA;AAAhC,KAAhB;AACAE,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAEV,UADC;AAEPc,MAAAA,OAAO,EAAEA;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMD,OAAO,GAAG,EAAE,GAAGH,UAAL;AAAiBH,MAAAA,IAAI,EAAE;AAAvB,KAAhB;AACAI,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAER,UADC;AAEPY,MAAAA,OAAO,EAAEA;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAME,UAAU,GAAG,MAAM;AACvB,UAAMF,OAAO,GAAG;AAAEL,MAAAA,IAAI,EAAE,EAAR;AAAYD,MAAAA,IAAI,EAAE;AAAlB,KAAhB;AACAI,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAET,WADC;AAEPa,MAAAA,OAAO,EAAEA;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,UADK;AAELE,MAAAA,SAFK;AAGLE,MAAAA,SAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGV,KAAK,CAACW;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7CD;;GAAMZ,U;;KAAAA,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nimport { SHOW_MODAL, RESET_MODAL, HIDE_MODAL, IProps, IModalState, EModal } from \"./types\";\n\nimport ModalContext from \"./ModalContext\";\nimport ModalReducer from \"./ModalReducer\";\n\nconst ModalState = (props: IProps) => {\n  const state: IModalState = {\n    show: false,\n    text: \"\",\n    type: null,\n  };\n\n  const [modalState, dispatch] = useReducer(ModalReducer, state);\n\n  const showModal = (text: string, type: EModal) => {\n    const payload = { text: text, show: true, type: type };\n    dispatch({\n      type: SHOW_MODAL,\n      payload: payload,\n    });\n  };\n\n  const hideModal = () => {\n    const payload = { ...modalState, show: false };\n    dispatch({\n      type: HIDE_MODAL,\n      payload: payload,\n    });\n  };\n\n  const resetModal = () => {\n    const payload = { text: \"\", show: false };\n    dispatch({\n      type: RESET_MODAL,\n      payload: payload,\n    });\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalState,\n        showModal,\n        hideModal,\n        resetModal,\n      }}\n    >\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalState;\n"]},"metadata":{},"sourceType":"module"}