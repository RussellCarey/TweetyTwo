{"version":3,"sources":["context/modal/types.ts","types/errors.ts","styles/theme/theme.js","styles/theme/colorss.js","styles/theme/spacing.js","styles/theme/fonts.js","components/resuable-styled/text.ts","mixins/mixins.ts","components/login-box/button.tsx","context/auth/AuthContext.ts","components/login-box/index.tsx","views/login-view/login-view.tsx","context/jobs/JobsContext.ts","context/modal/ModalContext.ts","components/jobs/delete-button.tsx","components/jobs/utils/formate-date.ts","components/jobs/schedule-item.styled.ts","components/jobs/schedule-item.tsx","components/jobs/index.tsx","components/navbar/user-info/image.tsx","components/navbar/user-info/title.tsx","components/navbar/user-info/user-info.tsx","components/navbar/create-new-button.tsx","components/navbar/logout-button.tsx","components/navbar/index.tsx","components/filter-area/search-bar/search-input.tsx","components/filter-area/search-bar/index.tsx","views/main/main-view.styled.ts","components/create-window/textbox.tsx","components/create-window/inputs-container.tsx","components/create-window/input.tsx","components/create-window/button.tsx","components/create-window/services/dbServices.ts","components/create-window/index.tsx","components/create-window/utils/check-inputs.ts","components/modal/index.tsx","views/main/main-view.tsx","App.tsx","context/jobs/types.ts","context/modal/ModalReducer.ts","context/modal/ModalState.tsx","context/jobs/JobsReducer.ts","context/jobs/JobsState.tsx","context/auth/types.ts","context/auth/AuthReducer.ts","context/auth/AuthState.tsx","index.tsx"],"names":["EModal","ERequestOutcomes","theme","ui","main","lightMain","blue","border","mainDark","text","white","grey","modal","error","ok","space","xsmall","small","medium","large","xlarge","xxlarge","xxxlage","fontsizes","lineheights","letterspacing","Title","styled","h1","NormalText","h5","p","ButtonHover","css","FocusInput","HoverOutline","Container","button","LoginButton","href","AuthContext","createContext","LoginArea","LoginTitle","SubTitle","Image","img","LoginBox","navigate","useNavigate","authState","useContext","useEffect","user","setTimeout","displayName","src","profileImage","alt","WindowContainer","div","LoginView","JobsContext","ModalContext","SHOW_MODAL","RESET_MODAL","HIDE_MODAL","DeleteButton","id","jobsContext","deletePostByID","removeJobFromState","showModal","onClickHandler","a","deletedItem","hasError","rows","length","isOK","data","job_id","onClick","formateTimeToString","date","datey","Date","hours","getHours","formattedHours","minutes","getMinutes","formattedMinutes","formatDateToString","year","getFullYear","month","getMonth","formattedMonth","day","getDate","formattedDay","DateTimeArea","Message","MiniImage","ScheduleItem","jobData","image_url","message","status","ScheduleList","jobsState","console","log","jobs","map","ProfileImage","NavBarImage","NavTitle","UserInfo","CreateNewButton","showCreateWindow","closeCreateWindow","e","LogoutButton","logoutUser","logout","success","ButtonContainer","NavBar","input","SearchInput","searchJobsByText","placeholder","onChange","target","value","SearchContainer","SearchBox","Window","TweetBox","textarea","WordCount","props","wordCount","TextArea","InputsContainer","children","DateTimeInput","type","CreateButtons","uploadImageFile","image","FormData","append","name","axios","request","method","withCredentials","url","headers","authorization","Cookies","imagePost","uploadTweet","tweet","uploadAttempt","time","imageURL","imageName","post","animated","FileInput","CreateWindow","addNewJob","imageInputElement","useRef","useState","file","setFile","setTweet","animationProps","useSpring","from","transform","opacity","to","delay","dataChangeHandler","variable","uploadImage","isEmpty","uploadImageReq","handleSubmitClick","uploadImageAttempt","submittedTweet","style","current","click","accept","ref","files","Modal","modalContext","modalState","hideModal","MainView","getAllJobs","get","show","App","EOrderJobs","getUserData","path","element","Reducer","state","action","payload","ModalState","useReducer","ModalReducer","dispatch","Provider","resetModal","SET_JOBS","SET_ALL_JOBS","RESET_JOBS","SHOW_WINDOW","CLOSE_WINDOW","jobsOriginal","JobState","JobsReducer","jobID","jobDeleting","jobsStateJobs","filter","toLowerCase","includes","deleteJob","job","SET_LOGIN_DATA","AuthState","AuthReducer","isLoggedIn","jwt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.771d3ee1.chunk.js","sourcesContent":["export const SHOW_MODAL = \"SHOW_MODAL\";\nexport const RESET_MODAL = \"RESET_MODAL\";\nexport const HIDE_MODAL = \"HIDE_MODAL\";\n\nexport enum EModal {\n  isOK = \"isOK\",\n  hasError = \"hasError\",\n}\n\nexport interface IProps {\n  children: React.ReactNode;\n}\n\nexport interface IModalState {\n  show: boolean;\n  text: string;\n  type: EModal | null;\n}\n","export enum ERequestOutcomes {\n  isEmpty = \"isEmpty\",\n  hasError = \"hasError\",\n  success = \"success\",\n}\n","import { colors } from \"./colorss\";\nimport { spacing } from \"./spacing\";\nimport { fonts } from \"./fonts\";\n\nexport const theme = {\n  colors,\n  spacing,\n  fonts,\n};\n","export const colors = {\n  ui: {\n    main: \"#2D2D3F\",\n    lightMain: \"#323245\",\n    blue: \"#20A4F3\",\n  },\n  border: {\n    main: \"#52526E\",\n    mainDark: \"#272836\",\n  },\n  text: {\n    white: \"#ffff\",\n    grey: \"#E1E1EB\",\n  },\n  modal: {\n    error: \"#DB2B39\",\n    ok: \"#6FD08C\",\n  },\n};\n","export const spacing = {\n  space: {\n    xsmall: \"0.4rem\",\n    small: \"0.8rem\",\n    medium: \"1rem\",\n    large: \"1.25rem\",\n    xlarge: \"1.563rem\",\n    xxlarge: \"1.953rem\",\n    xxxlage: \"2.441rem\",\n  },\n};\n","export const fonts = {\n  fontsizes: {\n    small: \"0.8rem\",\n    medium: \"1rem\",\n    large: \"1.25rem\",\n    xlarge: \"1.563rem\",\n    xxlarge: \"1.953rem\",\n    xxxlage: \"2.441rem\",\n  },\n  lineheights: {\n    xsmall: \"\",\n    small: \"\",\n    medium: \"\",\n    large: \"\",\n    xlarge: \"\",\n    xxlarge: \"\",\n  },\n  letterspacing: {\n    xsmall: \"\",\n    small: \"\",\n    medium: \"\",\n    large: \"\",\n    xlarge: \"\",\n    xxlarge: \"\",\n  },\n};\n","import styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nexport const Title = styled.h1`\n  color: ${theme.colors.text.white};\n  font-weight: 300;\n  font-size: ${theme.fonts.fontsizes.xlarge};\n\n  @media (max-width: 500px) {\n    font-size: ${theme.fonts.fontsizes.large};\n  }\n\n  @media (max-width: 450px) {\n    display: none;\n  }\n`;\n\nexport const Link = styled.h5`\n  color: ${theme.colors.text.grey};\n  font-weight: 300;\n  font-size: ${theme.fonts.fontsizes.medium};\n`;\n\nexport const NormalText = styled.p`\n  color: ${theme.colors.text.grey};\n  font-weight: 300;\n  font-size: ${theme.fonts.fontsizes.medium};\n  text-overflow: ellipsis;\n`;\n","import { css } from \"styled-components\";\nimport { theme } from \"../styles/theme/theme\";\n\nexport const ButtonHover = css`\n  &:hover {\n    transform: scale(101%);\n    cursor: pointer;\n    box-shadow: 0 5px 14px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const FocusInput = css`\n  &:focus {\n    outline: 1px solid ${theme.colors.ui.blue};\n  }\n`;\n\nexport const HoverOutline = css`\n  transition: all 0.3s ease-in-out;\n  outline: 1px solid transparent;\n\n  &:hover {\n    outline: 1px solid ${theme.colors.ui.blue};\n  }\n`;\n\nexport const HoverOutlineClick = css`\n  transition: all 0.3s ease-in-out;\n  outline: 1px solid transparent;\n\n  &:hover {\n    cursor: pointer;\n    outline: 1px solid ${theme.colors.ui.blue};\n    transform: scale(101%);\n    box-shadow: 0 5px 14px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { FunctionComponent, ReactNode } from \"react\";\n\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ButtonHover } from \"../../mixins/mixins\";\n\nconst Container = styled.button`\n  color: ${theme.colors.text.white};\n  background-color: ${theme.colors.ui.blue};\n\n  width: max-content;\n  height: max-content;\n  font-size: ${theme.fonts.fontsizes.large};\n  padding: ${theme.spacing.space.medium} ${theme.spacing.space.medium};\n\n  border-radius: 15px;\n\n  outline: none;\n  border: none;\n\n  ${ButtonHover}\n`;\n\nconst LoginButton: FunctionComponent = () => {\n  return (\n    <a href=\"http://127.0.0.1:3333/api/auth/twitter\">\n      <Container>Login to twitter!</Container>\n    </a>\n  );\n};\n\nexport default LoginButton;\n","import { createContext } from \"react\";\n\nconst AuthContext = createContext<any>(null!);\n\nexport default AuthContext;\n","import { FunctionComponent, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { Title } from \"../resuable-styled/text\";\nimport LoginButton from \"./button\";\nimport { NormalText } from \"../resuable-styled/text\";\nimport AuthContext from \"../../context/auth/AuthContext\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginArea = styled.button`\n  width: max-content;\n  height: max-content;\n  padding: ${theme.spacing.space.xxxlage};\n\n  z-index: 10;\n  background-color: ${theme.colors.ui.main};\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 0 100px rgba(0, 0, 0, 0.5);\n`;\n\nconst LoginTitle = styled(Title)`\n  margin-bottom: ${theme.spacing.space.small};\n`;\n\nconst SubTitle = styled(NormalText)`\n  margin-bottom: ${theme.spacing.space.large};\n`;\n\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-bottom: ${theme.spacing.space.xlarge};\n  outline: 2px solid ${theme.colors.border.mainDark};\n`;\n\nconst LoginBox: FunctionComponent = () => {\n  let navigate = useNavigate();\n  const authContext = useContext(AuthContext);\n  const { authState } = authContext;\n\n  useEffect(() => {\n    if (authState.user) {\n      setTimeout(() => {\n        navigate(\"/dashboard\");\n      }, 2000);\n    }\n\n    if (!authState.user) navigate(\"/\");\n  }, [authState.user]);\n\n  return (\n    <LoginArea>\n      {!authState.user ? (\n        <>\n          <LoginTitle>Welcome to Tweety</LoginTitle>\n          <SubTitle>The simple tweet scheduler.</SubTitle>\n          <LoginButton />\n        </>\n      ) : null}\n\n      {authState.user ? (\n        <>\n          <LoginTitle>Welcome {authState.user.displayName}!!</LoginTitle>\n          <SubTitle>Great to have you.</SubTitle>\n          <Image src={authState.user.profileImage} alt=\"userimage\"></Image>\n          <SubTitle>Please wait, loading your data.</SubTitle>\n        </>\n      ) : null}\n    </LoginArea>\n  );\n};\n\nexport default LoginBox;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport LoginBox from \"../../components/login-box\";\n\nexport const WindowContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  background-image: url(\"data:image/svg+xml,<svg id='patternId' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'><defs><pattern id='a' patternUnits='userSpaceOnUse' width='100' height='100' patternTransform='scale(7) rotate(0)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(236, 16%, 18%, 1)'/><path d='M0 0v1l1-1H0zm6.29 0-.147.143 11.81 11.619 8.19-8.143L22.666.047 22.709 0h-1.998l-.045.047 3.477 3.572-6.19 6.143L8.238.192 8.434 0H6.289zm6.759 0 1.047 1.047L15.143 0h-2.094zm14.474 0 7.143 7.143-2.428 2.523-3.43-3.523-4.855 4.572 8.238 8.142L43.857 7.143 36.686 0h-2.008l7.226 7.191-9.666 9.713L26 10.762l2.762-2.57 3.476 3.617 4.477-4.618L29.572.047 29.62 0h-2.096zm14.288 0 4.808 4.809 4.572-4.57L50.953 0h-2.047l.285.285-2.572 2.572L43.762 0H41.81zm14.068 0-17.64 17.904 4.57 4.62L65 .333 64.697 0H62.79l.258.285-20.19 20.192-2.572-2.573L57.857 0H55.88zm14.549 0-3.62 3.62 8.145 8.142L86.666.047 86.619 0h-1.951l.047.047L75 9.762l-6.143-6.143 2.57-2.572L75 4.619 79.62 0h-2.048l-2.619 2.62L72.334 0h-1.906zm21.43 0-3.62 3.62 4.57 4.571L100 .998V0h-.953l-6.19 6.191-2.572-2.572L93.905 0h-2.048zm-88 2.191L0 6.091v2.04l3.762-3.846 2.666 3.049-6.381 6.19-.047-.05v2.098l8.38-8.095L3.858 2.19zM100 6.091l-4.572 4.624L100 15.572v-2.097l-2.572-2.713L100 8.13V6.09zm-35.762.1-4.572 4.57 4.572 4.573 4.57-4.572-4.57-4.57zm21.428 0L74.953 16.904l-3.572-3.57-4.572 4.57 8.144 8.143 15.285-15.285-4.572-4.57zm-21.428 2 2.57 2.57-2.57 2.573-2.572-2.572 2.572-2.57zm21.477 0 2.57 2.57L75 24.048l-6.143-6.143 2.57-2.57L75 18.904 85.715 8.191zM10.666 10 0 20.668v2L10.666 12l2.572 2.572L0 27.811v2l15.238-15.239L10.666 10zm46.43 3.334L42.809 27.619l-7.381-7.38-8.143 8.142 4.572 4.572 3.57-3.572 2.811 2.81-6.142 6.143L21.38 27.619l-4.572 4.572 15.287 15.286 25-25L67.809 33.19l4.572-4.572-15.285-15.285zm35.713.238-4.57 4.57 11.714 11.715.047-.046v-1.954l-9.715-9.714 2.572-2.57L100 22.714v-2.047l-.047.047-7.144-7.143zm-71.143.094-12 11.38 4.572 4.669 7.334-7.238 3.381 3.57 4.62-4.62-7.907-7.761zm35.43 1.62L70.38 28.571l-2.572 2.57-10.713-10.714-25 25-13.287-13.285 2.572-2.57 10.715 10.712 8.142-8.142-4.81-4.809-3.57 3.57-2.573-2.57 6.143-6.143 7.38 7.381 14.288-14.287zm-35.477.429 5.904 5.762L25 24l-3.38-3.523-7.335 7.285-2.57-2.62 9.904-9.427zm64.047 4.762-4.57 4.57L96.38 40.334l3.619-3.62V34.81L85.666 20.477zm.049 2L99 35.762l-2.572 2.572-13.285-13.287 2.572-2.57zm-6.953 4.904L67.809 38.334l-3.57-3.572-4.573 4.572 8.143 8.143 15.525-15.524-4.572-4.572zm-71.666.238-4.573 4.572L17.81 47.477l4.572-4.573L7.096 27.62zm50 0L45.38 39.334l4.572 4.57 11.713-11.713-4.57-4.572zm21.713 1.762 2.572 2.572-13.524 13.524-6.142-6.143 2.57-2.572 3.572 3.572L78.81 29.381zm-71.713.238L20.38 42.904l-2.572 2.573L4.523 32.19l2.573-2.572zm50 0 2.57 2.572-9.713 9.713-2.572-2.57 9.715-9.715zm28.57 5.143-4.57 4.572 11.713 11.713 4.572-4.57-11.715-11.715zM0 34.809v1.906l.953-.953L0 34.809zm85.715 1.953 9.713 9.715-2.57 2.57-9.715-9.713 2.572-2.572zm-82.192 1.81L0 41.877v2.08l2.523 2.424L0 48.973v2.12l7.096 7.098 8.142-8.144L3.523 38.572zm0 1.951L13.238 50l-6.142 6.143L.953 50l3.57-3.715L1 42.857l2.523-2.334zM100 41.877l-1.096 1.027L100 43.957v-2.08zm-57.191.027-4.57 4.573 4.57 4.57 4.572-4.57-4.572-4.573zm14.287 0L45.38 53.62l4.572 4.572 7.143-7.144 10.713 10.715 4.572-4.57-15.285-15.288zm21.476 0-8.144 8.143L75 54.619l3.572-3.572 7.143 7.144 4.57-4.572-11.713-11.715zm-35.763 2 2.572 2.573-2.572 2.57-2.57-2.57 2.57-2.573zm14.287 0L70.38 57.191l-2.572 2.57-10.713-10.714-7.143 7.144-2.572-2.572 9.715-9.715zm21.476 0 9.713 9.715-2.57 2.572-7.143-7.144L75 52.619l-2.572-2.572 6.144-6.143zm-53.619 1.573L9.666 60.762l4.572 4.572 15.285-15.287-4.57-4.57zm0 2 2.57 2.57-13.285 13.287-2.572-2.572 13.287-13.285zM100 48.973l-1.047 1.074L100 51.094v-2.121zm-64.334.074-4.57 4.572 18.857 18.858 11.713-11.715-4.57-4.57-7.143 7.142-14.287-14.287zm0 2 14.287 14.287 7.143-7.143 2.57 2.57-9.713 9.716-16.857-16.858 2.57-2.572zm60.953 1.81-4.572 4.57L100 65.382v-2.049l-5.904-5.904 2.57-2.57L100 58.19v-1.953l-3.38-3.38zm-68.096 3.334L9.666 75.047l4.572 4.572 7.143-7.142 7.142 7.142 4.573-4.572-7.143-7.143 2.57-2.57 7.143 7.143 4.572-4.573-11.715-11.713zm50 0-8.142 8.143 8.142 8.143 4.573-4.573-3.573-3.57 3.573-3.572-4.573-4.57zM0 56.238v2l9.666 9.666-2.57 2.573L0 63.38v2l7.096 7.096 4.57-4.573L0 56.238zm28.523 1.905 9.715 9.714-2.572 2.57-7.143-7.142-4.57 4.572L31.096 75l-2.573 2.572-7.142-7.144-7.143 7.144L11.666 75l16.857-16.857zm50 .048 2.573 2.57-3.573 3.573 3.573 3.57-2.573 2.573-6.142-6.143 6.142-6.143zm10.715 1.57-4.572 4.573 3.572 3.57-6.904 6.905 4.57 4.572 11.477-11.477-8.143-8.142zm.047 2 6.143 6.143-9.475 9.477-2.572-2.572 6.904-6.905-3.57-3.57 2.57-2.572zm-25.047 1.573-8.142 8.143 4.57 4.57 8.143-8.143-4.57-4.57zm0 2 2.57 2.57-6.142 6.143-2.57-2.57 6.142-6.143zm-21.43 5.143L28.524 84.762l-7.142-7.143-4.572 4.57 11.714 11.715 18.858-18.857-4.572-4.57zm28.573 0-4.572 4.57 11.714 11.715 4.573-4.573L71.38 70.477zm28.572 0L88.238 82.189l4.57 4.43 7.145-7 .047.047v-2.094l-7.143 7.047-2.572-2.476L100 72.428v-1.905l-.047-.046zM0 70.523v1.952l16.809 16.81-2.57 2.572-3.573-3.572-7.143 7.143L0 91.904v2.05l3.523 3.523 7.143-7.143 3.572 3.57 4.57-4.57L0 70.524zm42.809 1.954 2.572 2.57-16.858 16.857-9.714-9.715 2.572-2.57 7.142 7.143L42.81 72.477zm28.572 0 9.715 9.712-2.573 2.573-9.714-9.715 2.572-2.57zm-17.858 1.57-4.57 4.572 4.57 4.57 4.573-4.57-4.573-4.572zm0 2 2.573 2.572-2.573 2.57-2.57-2.57 2.57-2.572zM0 77.619v2.047l6.096 6.096-2.573 2.666L0 84.81v1.953l3.523 3.664 4.573-4.713L0 77.619zm64.238 0L53.523 88.334l-7.142-7.145-4.572 4.573 11.714 11.715L68.81 82.189l-4.57-4.57zm0 2 2.57 2.57-13.285 13.288-9.714-9.715 2.572-2.573 7.142 7.145 10.715-10.715zm7.143 5.143-8.143 8.142 4.57 4.573 3.573-3.573 3.572 3.573 4.57-4.573-8.142-8.142zm14.285 0-4.57 4.572L89 97.238l4.572-4.572-7.906-7.904zm14.287 0-4.572 4.572 4.619 4.62v-2.097l-2.572-2.572 2.572-2.57V84.81l-.047-.05zm-28.525 1.953 6.144 6.142L75 95.427l-3.572-3.57-3.57 3.57-2.573-2.57 6.143-6.142zm14.287.047 5.904 5.904-2.572 2.572-5.904-5.904 2.572-2.572zm-46.477 1.572-4.572 4.57L41.762 100h2l-7.096-7.096 2.572-2.57L48.906 100h2L39.238 88.334zm-18.095 3.57-7.096 7.143-3.332-3.332L6.289 100h2.143l2.33-2.285L13.049 100h2.094l6.095-6.096L24 96.524 20.71 100h1.999L26 96.428l-4.857-4.524zm75.476 3.334L91.857 100h2.047l2.762-2.762 2.572 2.57-.191.192H100v-1.38l-3.38-3.382zm-36.142.096L55.879 100h1.978l2.57-2.62L62.79 100h1.908l-4.22-4.666zm-28.381.094L27.523 100h2.096l2.524-2.523L34.678 100h2.008l-4.59-4.572zm50 .049L77.572 100h2.047l2.524-2.523L84.668 100h1.951l-4.523-4.523zM0 98.617V100h1l.191-.191L0 98.617zm71.38.43-.952.953h1.906l-.953-.953z'  stroke-width='1' stroke='none' fill='hsla(240, 15%, 38%, 1)'/></pattern></defs><rect width='800%' height='800%' transform='translate(0,0)' fill='url(%23a)'/></svg>\");\n  overflow: hidden;\n`;\n\nconst LoginView: FunctionComponent = () => {\n  return (\n    <WindowContainer>\n      <LoginBox />\n    </WindowContainer>\n  );\n};\n\nexport default LoginView;\n","import { createContext } from \"react\";\n\nconst JobsContext = createContext<any>(null!);\n\nexport default JobsContext;\n","import { createContext } from \"react\";\n\nconst ModalContext = createContext<any>(null!);\n\nexport default ModalContext;\n","import { FunctionComponent, useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ButtonHover } from \"../../mixins/mixins\";\nimport JobsContext from \"../../context/jobs/JobsContext\";\nimport ModalContext from \"../../context/modal/ModalContext\";\nimport { EModal } from \"../../context/modal/types\";\nimport { ERequestOutcomes } from \"../../types/errors\";\n\nconst Container = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background-color: ${theme.colors.ui.blue};\n  color: ${theme.colors.text.white};\n  font-size: ${theme.fonts.fontsizes.small};\n  border-radius: 30%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  justify-self: end;\n  align-self: center;\n\n  transition: all 0.2s;\n\n  outline: none;\n  border: none;\n\n  ${ButtonHover}\n\n  @media (max-width: 750px) {\n    grid-row: 1/3;\n    grid-column: 2/3;\n    align-self: center;\n  }\n`;\n\ninterface IProps {\n  id: string;\n}\n\nconst DeleteButton: FunctionComponent<IProps> = ({ id }) => {\n  const jobsContext = useContext(JobsContext);\n  const { deletePostByID, removeJobFromState } = jobsContext;\n  const modalContext = useContext(ModalContext);\n  const { showModal } = modalContext;\n\n  const onClickHandler = async () => {\n    const deletedItem = await deletePostByID(id);\n    if (deletedItem === ERequestOutcomes.hasError) return showModal(\"Error deleting tweet\", EModal.hasError);\n    if (deletedItem.rows?.length < 1) return showModal(\"Error deleting tweet\", EModal.hasError);\n\n    showModal(\"Deleted tweet!\", EModal.isOK);\n\n    setTimeout(() => {\n      removeJobFromState(deletedItem.data?.job_id);\n    }, 1500);\n  };\n\n  return <Container onClick={onClickHandler}>X</Container>;\n};\n\nexport default DeleteButton;\n","export const formateTimeToString = (date: string) => {\n  const datey = new Date(date);\n  const hours = datey.getHours();\n  const formattedHours = hours < 10 ? `0${hours}` : hours;\n  const minutes = datey.getMinutes();\n  const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  return `${formattedHours}:${formattedMinutes}`;\n};\n\nexport const formatDateToString = (date: string) => {\n  const datey = new Date(date);\n  const year = datey.getFullYear();\n  const month = datey.getMonth() + 1;\n  const formattedMonth = month < 10 ? `0${month}` : month;\n  const day = datey.getDate();\n  const formattedDay = day < 10 ? `0${day}` : day;\n  return `${year}/${formattedMonth}/${formattedDay}`;\n};\n","import styled from \"styled-components\";\nimport { HoverOutline } from \"../../mixins/mixins\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { NormalText } from \"../resuable-styled/text\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 80px;\n  padding: 0 ${theme.spacing.space.xlarge};\n\n  border-radius: 20px;\n  border: 1px solid ${theme.colors.border.main};\n\n  display: grid;\n  grid-template-columns: 30px 6fr 2fr 100px;\n\n  grid-column-gap: ${theme.spacing.space.medium};\n  margin-bottom: ${theme.spacing.space.medium};\n\n  transition: all 0.2s ease-in-out;\n\n  ${HoverOutline}\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 30px 4fr 2fr 100px;\n  }\n\n  @media (max-width: 950px) {\n    grid-template-columns: 30px 3fr 2fr 100px;\n  }\n\n  @media (max-width: 950px) {\n    grid-template-columns: 30px 2fr 2fr 100px;\n  }\n\n  @media (max-width: 750px) {\n    height: max-content;\n    padding: ${theme.spacing.space.small};\n    grid-row-gap: ${theme.spacing.space.small};\n    grid-template-columns: px 1fr 100px;\n    grid-template-rows: repeat(2, max-content);\n  }\n\n  @media (max-width: 750px) {\n    grid-template-columns: 1fr min-content;\n  }\n`;\n\nexport const DateTimeArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  @media (max-width: 750px) {\n    grid-row: 2/3;\n    grid-column: 1/2;\n  }\n`;\n\nexport const Message = styled(NormalText)`\n  max-width: 90%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  font-size: ${theme.fonts.fontsizes.medium};\n  align-self: center;\n`;\n\nexport const MiniImage = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-right: ${theme.spacing.space.medium};\n  align-self: center;\n\n  @media (max-width: 750px) {\n    display: none;\n  }\n`;\n","import { FunctionComponent } from \"react\";\nimport { NormalText } from \"../resuable-styled/text\";\nimport { IRequestJobObject } from \"../../types/types\";\nimport DeleteButton from \"./delete-button\";\nimport { formateTimeToString, formatDateToString } from \"./utils/formate-date\";\nimport { Container, MiniImage, DateTimeArea, Message } from \"./schedule-item.styled\";\n\n// Interface for this job object?\ninterface IProps {\n  jobData: IRequestJobObject;\n}\n\n// jobData has image_name or image_url\nconst ScheduleItem: FunctionComponent<IProps> = ({ jobData }) => {\n  return (\n    <Container>\n      {jobData.image_url ? (\n        <MiniImage src=\"./images/image-solid.png\" alt=\"image tweet\" />\n      ) : (\n        <MiniImage src=\"./images/comment.png\" alt=\"text only tweet\" />\n      )}\n      <Message>{jobData.message}</Message>\n      <DateTimeArea>\n        <NormalText>{jobData.status}</NormalText>\n        <NormalText>{formatDateToString(jobData.date)}</NormalText>\n        <NormalText>{formateTimeToString(jobData.date)}</NormalText>\n      </DateTimeArea>\n\n      <DeleteButton id={jobData.job_id} />\n    </Container>\n  );\n};\n\nexport default ScheduleItem;\n","import { FunctionComponent, useContext } from \"react\";\nimport { theme } from \"../../styles/theme/theme\";\nimport styled from \"styled-components\";\nimport JobsContext from \"../../context/jobs/JobsContext\";\nimport { IRequestJobObject } from \"../../types/types\";\n\nimport ScheduleItem from \"./schedule-item\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: max-content;\n  padding: ${theme.spacing.space.small} 2px;\n\n  overflow-y: scroll;\n`;\n\nconst ScheduleList: FunctionComponent = () => {\n  const jobsContext = useContext(JobsContext);\n  const { jobsState } = jobsContext;\n\n  return (\n    <Container>\n      {console.log(jobsState.jobs)}\n      {jobsState.jobs\n        ? jobsState.jobs.map((jobs: IRequestJobObject) => {\n            return <ScheduleItem key={jobs.job_id} jobData={jobs} />;\n          })\n        : null}\n    </Container>\n  );\n};\n\nexport default ScheduleList;\n","import { FunctionComponent, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../../styles/theme/theme\";\n\nimport AuthContext from \"../../../context/auth/AuthContext\";\n\nconst Container = styled.div`\n  height: min-content;\n  width: min-content;\n  margin-right: ${theme.spacing.space.large};\n  border-radius: 50%;\n  outline: 2px solid ${theme.colors.border.main};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ProfileImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\nconst NavBarImage: FunctionComponent = () => {\n  const authContext = useContext(AuthContext);\n  const { authState } = authContext;\n\n  return (\n    <Container>\n      <ProfileImage\n        src={authState.user?.profileImage ? authState.user?.profileImage : \"./images/default-profile.svg\"}\n      />\n    </Container>\n  );\n};\n\nexport default NavBarImage;\n","import { FunctionComponent, useContext } from \"react\";\nimport { Title } from \"../../resuable-styled/text\";\n\ninterface IProp {\n  text: string;\n}\n\nconst NavTitle: FunctionComponent<IProp> = ({ text }) => {\n  return <Title>{text}</Title>;\n};\n\nexport default NavTitle;\n","import { FunctionComponent, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../../styles/theme/theme\";\nimport NavBarImage from \"./image\";\nimport NavTitle from \"./title\";\n\nimport AuthContext from \"../../../context/auth/AuthContext\";\n\nconst Container = styled.div`\n  width: max-content;\n  height: min-content;\n\n  display: flex;\n  align-items: center;\n`;\n\nconst UserInfo: FunctionComponent = () => {\n  const authContext = useContext(AuthContext);\n  const { authState } = authContext;\n  return (\n    <Container>\n      <NavBarImage />\n      <NavTitle text={authState.user ? `Welcome ${authState.user.displayName}!` : \"Welcome \"} />\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","import React, { FunctionComponent, useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ButtonHover } from \"../../mixins/mixins\";\nimport JobsContext from \"../../context/jobs/JobsContext\";\n\nconst Container = styled.button`\n  color: ${theme.colors.text.white};\n  background-color: ${theme.colors.ui.blue};\n\n  width: 100px;\n  height: 40px;\n\n  border-radius: 15px;\n\n  outline: none;\n  border: none;\n\n  font-size: ${theme.fonts.fontsizes.medium};\n\n  ${ButtonHover}\n`;\n\nconst CreateNewButton: FunctionComponent = () => {\n  const jobsContext = useContext(JobsContext);\n  const { jobsState, showCreateWindow, closeCreateWindow } = jobsContext;\n\n  const onClickHandler = (e: React.MouseEvent) => {\n    if (jobsState.showCreateWindow) {\n      closeCreateWindow();\n    }\n\n    if (!jobsState.showCreateWindow) {\n      showCreateWindow();\n    }\n  };\n\n  return <Container onClick={onClickHandler}>{jobsState.showCreateWindow ? \"Close\" : \"New\"}</Container>;\n};\n\nexport default CreateNewButton;\n","import { FunctionComponent, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ButtonHover } from \"../../mixins/mixins\";\nimport ModalContext from \"../../context/modal/ModalContext\";\nimport { EModal } from \"../../context/modal/types\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport { ERequestOutcomes } from \"../../types/errors\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nconst Container = styled.button`\n  color: ${theme.colors.text.white};\n  background-color: ${theme.colors.ui.blue};\n\n  width: 100px;\n  height: 40px;\n\n  border-radius: 15px;\n\n  outline: none;\n  border: none;\n\n  font-size: ${theme.fonts.fontsizes.medium};\n\n  ${ButtonHover}\n`;\n\nconst LogoutButton: FunctionComponent = () => {\n  let navigate = useNavigate();\n  const modalContext = useContext(ModalContext);\n  const { showModal } = modalContext;\n  const authContext = useContext(AuthContext);\n  const { logoutUser } = authContext;\n\n  const onClickHandler = async () => {\n    showModal(\"Logging out, please wait.\", EModal.isOK);\n\n    const logout = await logoutUser();\n\n    setTimeout(() => {\n      if (logout === ERequestOutcomes.success) return navigate(\"/\");\n      if (logout === ERequestOutcomes.hasError)\n        return showModal(\"Error logging out, please try again\", EModal.hasError);\n    }, 2000);\n  };\n  return <Container onClick={onClickHandler}>logout</Container>;\n};\n\nexport default LogoutButton;\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport UserInfo from \"./user-info/user-info\";\nimport CreateNewButton from \"./create-new-button\";\nimport LogoutButton from \"./logout-button\";\n\nconst Container = styled.div`\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: ${theme.spacing.space.xxxlage};\n`;\n\nconst ButtonContainer = styled.div`\n  width: calc(200px + 20px);\n  height: max-content;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst NavBar: FunctionComponent = () => {\n  return (\n    <Container>\n      <UserInfo />\n      <ButtonContainer>\n        <CreateNewButton />\n        <LogoutButton />\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default NavBar;\n","import React, { FunctionComponent, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../../styles/theme/theme\";\n\nimport JobsContext from \"../../../context/jobs/JobsContext\";\n\nconst Container = styled.input`\n  width: 100%;\n  height: 100%;\n  font-size: ${theme.fonts.fontsizes.medium};\n  color: ${theme.colors.text.white};\n\n  background-color: transparent;\n  border: none;\n  outline: none;\n`;\n\nconst SearchInput: FunctionComponent = () => {\n  const jobsContext = useContext(JobsContext);\n  const { searchJobsByText } = jobsContext;\n\n  const onChangeHandler = (e: React.ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    searchJobsByText(target.value);\n  };\n\n  return <Container placeholder=\"Search your tweets..\" onChange={onChangeHandler}></Container>;\n};\n\nexport default SearchInput;\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { HoverOutline } from \"../../../mixins/mixins\";\nimport { theme } from \"../../../styles/theme/theme\";\n\nimport SearchInput from \"./search-input\";\nimport OrderInput from \"../dropdown/order-select\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: max-content;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SearchContainer = styled.div`\n  width: 40%;\n\n  border: solid 1px ${theme.colors.border.main};\n  border-radius: 15px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  //prettier-ignore\n  padding:  ${theme.spacing.space.small};\n\n  margin-bottom: ${theme.spacing.space.xxxlage};\n\n  ${HoverOutline}\n\n  @media (max-width: 650px) {\n    width: 100%;\n  }\n`;\n\nconst SearchBox: FunctionComponent = () => {\n  return (\n    <Container>\n      <SearchContainer>\n        <SearchInput />\n      </SearchContainer>\n    </Container>\n  );\n};\n\nexport default SearchBox;\n","import styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${theme.colors.ui.main};\n\n  overflow: hidden;\n`;\n\nexport const Window = styled.div`\n  width: calc(100vw - ${theme.spacing.space.xxxlage});\n  height: calc(100vh - ${theme.spacing.space.xxxlage});\n\n  background-color: ${theme.colors.ui.main};\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.35);\n  border-radius: 20px;\n\n  padding: ${theme.spacing.space.xlarge} ${theme.spacing.space.xxlarge};\n\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 750px) {\n    width: 100vw;\n    height: 100vh;\n    border-radius: 0;\n    padding: ${theme.spacing.space.medium} ${theme.spacing.space.large};\n  }\n`;\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ITextAreaProps, IWordCountProps } from \"./types/types\";\nimport { FocusInput, HoverOutline } from \"../../mixins/mixins\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  @media (max-width: 550px) {\n    margin-bottom: ${theme.spacing.space.large};\n  }\n`;\n\nconst TweetBox = styled.textarea`\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  outline: none;\n  border: solid 1px ${theme.colors.border.main};\n  border-radius: 15px;\n  padding: ${theme.spacing.space.medium};\n\n  font-size: ${theme.fonts.fontsizes.medium};\n  color: ${theme.colors.text.white};\n  background-color: ${theme.colors.ui.lightMain};\n  resize: none;\n\n  ${FocusInput}\n  ${HoverOutline}\n\n   @media (max-width: 550px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n\nconst WordCount = styled.p`\n  position: absolute;\n  right: ${theme.spacing.space.small};\n  bottom: ${theme.spacing.space.small};\n  z-index: 5000;\n\n  font-size: ${theme.fonts.fontsizes.small};\n  color: ${(props: IWordCountProps) => (props.wordCount >= 280 ? theme.colors.modal.error : theme.colors.text.grey)};\n`;\n\nconst TextArea: FunctionComponent<ITextAreaProps> = ({ onChange, id, value }) => {\n  return (\n    <Container>\n      <TweetBox id={id} value={value} placeholder=\"Type your tweet, make it a good one!\" onChange={onChange}></TweetBox>\n      <WordCount wordCount={value.length}>{`${value.length}/280`}</WordCount>\n    </Container>\n  );\n};\n\nexport default TextArea;\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nconst Container = styled.div`\n  width: 35%;\n  height: 100%;\n\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-gap: ${theme.spacing.space.xsmall};\n\n  margin-left: ${theme.spacing.space.medium};\n\n  @media (max-width: 750px) {\n    width: 100%;\n  }\n\n  @media (max-width: 550px) {\n    margin: 0;\n  }\n`;\n\nconst InputsContainer: FunctionComponent = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default InputsContainer;\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { HoverOutline, FocusInput } from \"../../mixins/mixins\";\n\nconst Container = styled.input`\n  width: 100%;\n  height: 100%;\n  max-height: 50px;\n\n  padding: ${theme.spacing.space.medium};\n\n  border-radius: 15px;\n  border: 1px solid ${theme.colors.border.main};\n\n  ${FocusInput}\n  ${HoverOutline}\n`;\n\ninterface IProps {\n  type: string;\n  onChange?: (e: any) => void;\n  id: string;\n  value: string;\n}\n\nconst DateTimeInput: FunctionComponent<IProps> = ({ type, onChange, id, value }) => {\n  return <Container type={type} value={value} onChange={onChange} id={id} />;\n};\n\nexport default DateTimeInput;\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ButtonHover, HoverOutline } from \"../../mixins/mixins\";\n\nconst Container = styled.button`\n  width: 100%;\n  height: 100%;\n  max-height: 50px;\n\n  background-color: ${theme.colors.ui.main};\n  border: 1px solid ${theme.colors.border.main};\n  border-radius: 15px;\n\n  color: ${theme.colors.text.white};\n\n  transition: all 0.1s ease-in-out;\n  ${ButtonHover}\n  ${HoverOutline}\n`;\n\ninterface IProps {\n  text: string;\n  onClick?: (e: any) => void;\n}\n\nconst CreateButtons: FunctionComponent<IProps> = ({ text, onClick }) => {\n  return <Container onClick={onClick}>{text}</Container>;\n};\n\nexport default CreateButtons;\n","import axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../../types/errors\";\nimport { ITweetObject, IUploadAttempt } from \"../types/types\";\n\nexport const uploadImageFile = async (image: File) => {\n  // Upload image to server\n  const data: FormData = new FormData();\n  data.append(\"image\", image, `${image.name}`);\n\n  try {\n    const imagePost = await axios.request({\n      method: \"POST\",\n      withCredentials: true,\n      url: `http://localhost:3333/api/post/addImage`,\n      data,\n      headers: {\n        authorization: `${Cookies.get(\"token\")}`,\n      },\n    });\n\n    return imagePost.data;\n  } catch (error) {\n    return ERequestOutcomes.hasError;\n  }\n};\n\nexport const uploadTweet = async (tweet: ITweetObject, uploadAttempt: IUploadAttempt) => {\n  try {\n    const post = await axios.request({\n      method: \"POST\",\n      withCredentials: true,\n      url: `http://localhost:3333/api/post/message`,\n      data: {\n        date: tweet.date,\n        time: tweet.time,\n        message: tweet.message,\n        imageURL: uploadAttempt ? uploadAttempt.url : null,\n        imageName: uploadAttempt ? uploadAttempt.name : null,\n      },\n      headers: {\n        authorization: `${Cookies.get(\"token\")}`,\n      },\n    });\n\n    return post;\n  } catch (error) {\n    console.log(error);\n    return ERequestOutcomes.hasError;\n  }\n};\n","import React, { FunctionComponent, useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nimport { useSpring, animated } from \"react-spring\";\n\nimport ModalContext from \"../../context/modal/ModalContext\";\n\nimport TextArea from \"./textbox\";\nimport InputsContainer from \"./inputs-container\";\nimport DateTimeInput from \"./input\";\nimport CreateButtons from \"./button\";\n\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { EModal } from \"../../context/modal/types\";\nimport { uploadImageFile, uploadTweet } from \"./services/dbServices\";\n\nimport { checkDateInputs, checkWordCount } from \"./utils/check-inputs\";\n\nimport JobsContext from \"../../context/jobs/JobsContext\";\n\nconst Container = styled(animated.div)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 500;\n\n  width: 100vw;\n  height: 150px;\n  padding: ${theme.spacing.space.large} ${theme.spacing.space.xxxlage};\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: ${theme.colors.ui.main};\n  box-shadow: 0 -20px 30px rgba(0, 0, 0, 0.2);\n\n  @media (max-width: 550px) {\n    height: 300px;\n    flex-direction: column;\n    padding: ${theme.spacing.space.small} ${theme.spacing.space.large};\n    bottom: 50px;\n  }\n`;\n\nconst FileInput = styled.input`\n  display: none;\n  opacity: 100%;\n`;\n\nconst CreateWindow: FunctionComponent = () => {\n  const modalContext = useContext(ModalContext);\n  const { showModal } = modalContext;\n  const jobsContext = useContext(JobsContext);\n  const { closeCreateWindow, addNewJob } = jobsContext;\n  const imageInputElement = useRef() as React.MutableRefObject<HTMLInputElement>;\n  const [file, setFile] = useState<File | null>();\n  const [tweet, setTweet] = useState({\n    message: \"\",\n    date: \"\",\n    time: \"\",\n  });\n\n  const animationProps = useSpring({\n    from: { transform: \"translateY(400px)\", opacity: 0 },\n    to: { transform: \"translateY(0px)\", opacity: 1 },\n    delay: 100,\n  });\n\n  const dataChangeHandler = (e: React.ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    const variable = e.target.id!;\n    setTweet({ ...tweet, [variable]: target.value });\n  };\n\n  const imageOnClickHandler = () => {\n    imageInputElement.current.click();\n  };\n\n  const imageOnChangeHandler = (e: React.ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    setFile(target.files![0]);\n  };\n\n  const uploadImage = async () => {\n    if (!file) return ERequestOutcomes.isEmpty;\n    const uploadImageReq = await uploadImageFile(file);\n    if (uploadImageReq.hasError) return ERequestOutcomes.hasError;\n    return uploadImageReq;\n  };\n\n  //! Need to add modal and resposnes from modal..\n  const handleSubmitClick = async () => {\n    if (!checkWordCount(tweet.message.length)) return showModal(\"Please check your word count\", EModal.hasError);\n    if (!checkDateInputs(tweet.date, tweet.time)) return showModal(\"Please check your date or time\", EModal.hasError);\n\n    const uploadImageAttempt = await uploadImage();\n    if (uploadImageAttempt === ERequestOutcomes.hasError)\n      return showModal(\"Error creating tweety. Please try again.\", EModal.hasError);\n\n    const submittedTweet = await uploadTweet(tweet, uploadImageAttempt.data);\n    if (submittedTweet === ERequestOutcomes.hasError)\n      return showModal(\"Error creating tweet. Please try again.\", EModal.hasError);\n\n    showModal(\"Tweet created!\", EModal.isOK);\n\n    setTimeout(() => {\n      closeCreateWindow();\n      addNewJob(submittedTweet.data.jobs.rows);\n    }, 3000);\n  };\n\n  return (\n    <Container style={animationProps}>\n      <TextArea value={tweet.message} onChange={dataChangeHandler} id=\"message\" />\n      <InputsContainer>\n        <DateTimeInput type={\"date\"} value={tweet.date} onChange={dataChangeHandler} id=\"date\" />\n        <DateTimeInput type={\"time\"} value={tweet.time} onChange={dataChangeHandler} id=\"time\" />\n        <CreateButtons text={file ? file.name : \"add image\"} onClick={imageOnClickHandler} />\n        <CreateButtons text={\"submit\"} onClick={handleSubmitClick} />\n        <FileInput\n          id=\"file-select\"\n          type=\"file\"\n          accept=\"image/*\"\n          ref={imageInputElement}\n          onChange={imageOnChangeHandler}\n        />\n      </InputsContainer>\n    </Container>\n  );\n};\n\nexport default CreateWindow;\n","export const checkWordCount = (wordCount: number) => {\n  if (wordCount >= 280) return false;\n  if (wordCount <= 0) return false;\n  return true;\n};\n\nexport const checkDateInputs = (date: string, time: string) => {\n  if (date === \"\" || date === null) return false;\n  if (time === \"\" || time === null) return false;\n  return true;\n};\n","import { FunctionComponent, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nimport { EModal } from \"../../context/modal/types\";\nimport ModalContext from \"../../context/modal/ModalContext\";\n\ninterface ICompProps {\n  type: EModal;\n}\n\nconst Container = styled.div`\n  width: max-content;\n  height: max-content;\n  border-radius: 15px;\n\n  position: absolute;\n  top: ${theme.spacing.space.large};\n  left: calc(50vw - (max-content / 2));\n  z-index: 1000;\n\n  outline: 5px solid ${theme.colors.border.mainDark};\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n\n  color: ${theme.colors.text.white};\n  padding: ${theme.spacing.space.large};\n  background-color: ${(props: ICompProps) =>\n    props.type === EModal.hasError ? theme.colors.modal.error : theme.colors.modal.ok};\n`;\n\nconst Modal: FunctionComponent = () => {\n  const modalContext = useContext(ModalContext);\n  const { modalState, hideModal } = modalContext;\n\n  useEffect(() => {\n    setTimeout(() => {\n      hideModal();\n    }, 3000);\n  }, []);\n\n  return <Container type={modalState.type}>{modalState.text}</Container>;\n};\n\nexport default Modal;\n","import React, { FunctionComponent, useEffect, useContext } from \"react\";\nimport ScheduleList from \"../../components/jobs\";\nimport NavBar from \"../../components/navbar\";\nimport SearchBox from \"../../components/filter-area/search-bar/index\";\nimport { Container, Window } from \"./main-view.styled\";\nimport JobsContext from \"../../context/jobs/JobsContext\";\nimport Cookies from \"js-cookie\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport CreateWindow from \"../../components/create-window\";\nimport Modal from \"../../components/modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport ModalContext from \"../../context/modal/ModalContext\";\n\nconst MainView: FunctionComponent = () => {\n  let navigate = useNavigate();\n  const modalContext = useContext(ModalContext);\n  const { modalState } = modalContext;\n  const jobsContext = useContext(JobsContext);\n  const { jobsState, getAllJobs } = jobsContext;\n  const authContext = useContext(AuthContext);\n  const { authState } = authContext;\n\n  useEffect(() => {\n    // Return if not logged in..\n    if (!authState.user || !Cookies.get(\"connect.sid\")) navigate(\"/\");\n    getAllJobs();\n  }, []);\n\n  return (\n    <Container>\n      {modalState.show ? <Modal /> : null}\n      {jobsState.showCreateWindow === true ? <CreateWindow /> : null}\n      <Window>\n        <NavBar />\n        <SearchBox />\n        <ScheduleList />\n      </Window>\n    </Container>\n  );\n};\n\nexport default MainView;\n","import { useContext, useEffect, useState } from \"react\";\nimport \"./styles/global.css\";\nimport LoginView from \"./views/login-view/login-view\";\nimport MainView from \"./views/main/main-view\";\nimport * as Cookies from \"js-cookie\";\nimport AuthContext from \"./context/auth/AuthContext\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const authContext = useContext(AuthContext);\n  const { getUserData } = authContext;\n\n  useEffect(() => {\n    if (Cookies.get(\"token\")) {\n      getUserData();\n    }\n  }, []);\n\n  return (\n    <>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<LoginView />} />\n          <Route path=\"/dashboard\" element={<MainView />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","export const SET_JOBS = \"SET_JOBS\";\nexport const SET_ALL_JOBS = \"SET_ALL_JOBS\";\nexport const RESET_JOBS = \"RESET_JOBS\";\nexport const SHOW_WINDOW = \"SHOW_WINDOW\";\nexport const CLOSE_WINDOW = \"CLOSE_WINDOW\";\n\nexport interface IJobsState {\n  jobs: Array<string> | null;\n  jobsOriginal: Array<string> | null;\n  showCreateWindow: boolean;\n}\n\nexport interface IJobObject {\n  date: string;\n  image_name: string;\n  image_url: string;\n  is_active: boolean;\n  job_id: string;\n  message: string;\n  user_twitter_id: string;\n  status: string;\n}\n\nexport enum EOrderJobs {\n  datedec = \"datedec\",\n  dateasc = \"dateasc\",\n  status = \"status\",\n}\n","import { SHOW_MODAL, RESET_MODAL, HIDE_MODAL, IModalState } from \"./types\";\n\nconst Reducer = (state: IModalState, action: any) => {\n  switch (action.type) {\n    // Set the new survey title of building survey\n    case SHOW_MODAL:\n      return action.payload;\n\n    case HIDE_MODAL:\n      return action.payload;\n\n    case RESET_MODAL:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import React, { useReducer } from \"react\";\n\nimport { SHOW_MODAL, RESET_MODAL, HIDE_MODAL, IProps, IModalState, EModal } from \"./types\";\n\nimport ModalContext from \"./ModalContext\";\nimport ModalReducer from \"./ModalReducer\";\n\nconst ModalState = (props: IProps) => {\n  const state: IModalState = {\n    show: false,\n    text: \"\",\n    type: null,\n  };\n\n  const [modalState, dispatch] = useReducer(ModalReducer, state);\n\n  const showModal = (text: string, type: EModal) => {\n    const payload = { text: text, show: true, type: type };\n    dispatch({\n      type: SHOW_MODAL,\n      payload: payload,\n    });\n  };\n\n  const hideModal = () => {\n    const payload = { ...modalState, show: false };\n    dispatch({\n      type: HIDE_MODAL,\n      payload: payload,\n    });\n  };\n\n  const resetModal = () => {\n    const payload = { text: \"\", show: false };\n    dispatch({\n      type: RESET_MODAL,\n      payload: payload,\n    });\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalState,\n        showModal,\n        hideModal,\n        resetModal,\n      }}\n    >\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalState;\n","import { SET_JOBS, SET_ALL_JOBS, RESET_JOBS, SHOW_WINDOW, CLOSE_WINDOW, IJobsState } from \"./types\";\n\nconst Reducer = (state: IJobsState, action: any) => {\n  switch (action.type) {\n    // Set the new survey title of building survey\n    case SET_ALL_JOBS:\n      return { ...state, jobs: action.payload, jobsOriginal: action.payload };\n\n    case RESET_JOBS:\n      return { ...state, jobs: state.jobsOriginal };\n\n    case SET_JOBS:\n      return { ...state, jobs: action.payload };\n\n    case SHOW_WINDOW:\n      return { ...state, showCreateWindow: true };\n\n    case CLOSE_WINDOW:\n      return { ...state, showCreateWindow: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\n\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_JOBS, SET_ALL_JOBS, RESET_JOBS, SHOW_WINDOW, CLOSE_WINDOW, IJobsState, EOrderJobs } from \"./types\";\n\nimport { IJobObject } from \"./types\";\n\nimport JobsReducer from \"./JobsReducer\";\nimport JobsContext from \"./JobsContext\";\n\nexport interface IProps {\n  children: React.ReactNode;\n}\n\nconst JobState = (props: IProps) => {\n  const state: IJobsState = {\n    jobs: [],\n    jobsOriginal: [],\n    showCreateWindow: false,\n  };\n\n  const [jobsState, dispatch] = useReducer(JobsReducer, state);\n\n  const getAllJobs = async () => {\n    try {\n      const jobs = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/getAllJobs`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n      });\n\n      dispatch({ type: SET_ALL_JOBS, payload: jobs.data.data.rows });\n    } catch (error: any) {\n      //! Just show modal, no need to return..\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const deletePostByID = async (id: string) => {\n    try {\n      const jobDeleting = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/deleteJob`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n        data: {\n          jobID: id,\n        },\n      });\n\n      return jobDeleting;\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const removeJobFromState = (id: string) => {\n    const jobs = jobsState.jobsOriginal;\n    const deleteJob = jobs.filter((job: IJobObject) => job.job_id !== id);\n    dispatch({ type: SET_ALL_JOBS, payload: deleteJob });\n  };\n\n  const searchJobsByText = (text: string) => {\n    if (text === \"\") return dispatch({ type: RESET_JOBS });\n    const jobsStateJobs = jobsState.jobsOriginal.filter((jobs: IJobObject) =>\n      jobs.message.toLowerCase().includes(text.toLowerCase())\n    );\n    dispatch({ type: SET_JOBS, payload: jobsStateJobs });\n  };\n\n  const addNewJob = (job: IJobObject) => {\n    dispatch({ type: SET_ALL_JOBS, payload: job });\n  };\n\n  // const orderJobsByField = (type: EOrderJobs) => {\n  //   if (EOrderJobs.status) {\n  //     const sortLetter = (a: IJobObject, b: IJobObject) => (a.status > b.status ? 1 : b.status > a.status ? -1 : 0);\n\n  //     const sortedJobs = jobsState.jobsOriginal.sort(sortLetter);\n  //     dispatch({ type: SET_JOBS, payload: sortedJobs });\n  //   }\n\n  //   if (EOrderJobs.dateasc) {\n  //     const sortedDate = (a: IJobObject, b: IJobObject) =>\n  //       new Date(a.date).getTime() > new Date(b.date).getTime()\n  //         ? 1\n  //         : new Date(b.date).getTime() > new Date(a.date).getTime()\n  //         ? -1\n  //         : 0;\n\n  //     const sortedJobs = jobsState.jobsOriginal.sort(sortedDate);\n  //     dispatch({ type: SET_JOBS, payload: sortedJobs });\n  //   }\n\n  //   if (EOrderJobs.datedec) {\n  //     const sortedDate = (a: IJobObject, b: IJobObject) =>\n  //       new Date(a.date).getTime() > new Date(b.date).getTime()\n  //         ? -1\n  //         : new Date(b.date).getTime() > new Date(a.date).getTime()\n  //         ? 1\n  //         : 0;\n\n  //     const sortedJobs = jobsState.jobsOriginal.sort(sortedDate);\n  //     dispatch({ type: SET_JOBS, payload: sortedJobs });\n  //   }\n  // };\n\n  const showCreateWindow = () => {\n    console.log(\"Show create window\");\n    dispatch({ type: SHOW_WINDOW });\n  };\n\n  const closeCreateWindow = () => {\n    console.log(\"Close create window\");\n    dispatch({ type: CLOSE_WINDOW });\n  };\n\n  return (\n    <JobsContext.Provider\n      value={{\n        jobsState,\n        getAllJobs,\n        deletePostByID,\n        showCreateWindow,\n        closeCreateWindow,\n        searchJobsByText,\n        removeJobFromState,\n        addNewJob,\n      }}\n    >\n      {props.children}\n    </JobsContext.Provider>\n  );\n};\n\nexport default JobState;\n","export const SET_LOGIN_DATA = \"SET_LOGIN_DATA\";\n\nexport interface IProps {\n  children: React.ReactNode;\n}\n\nexport interface IUserData {\n  displayName: string;\n  email: string;\n  iat: number;\n  id: string;\n  profileImage: string;\n  username: string;\n}\n\nexport interface IStateProps {\n  isLoggedIn: boolean;\n  jwt: string;\n  user: IUserData | null;\n}\n","import { SET_LOGIN_DATA } from \"./types\";\n\nconst Reducer = (state: any, action: any) => {\n  switch (action.type) {\n    // Set the new survey title of building survey\n    case SET_LOGIN_DATA:\n      return { ...state, user: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_LOGIN_DATA, IProps, IStateProps } from \"./types\";\n\nimport AuthContext from \"./AuthContext\";\nimport AuthReducer from \"./AuthReducer\";\n\nconst AuthState = (props: IProps) => {\n  const state: IStateProps = {\n    isLoggedIn: false,\n    jwt: \"\",\n    user: null,\n  };\n\n  const [authState, dispatch] = useReducer(AuthReducer, state);\n\n  const getUserData = async () => {\n    try {\n      const user = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/auth/getUserData`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n      });\n\n      if (user.data.data === null) return ERequestOutcomes.hasError;\n      dispatch({ type: SET_LOGIN_DATA, payload: user.data.data });\n    } catch (error: any) {\n      //! Just show modal, no need to return..\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const logoutUser = async () => {\n    try {\n      const user = await axios.request({\n        method: \"GET\",\n        withCredentials: true,\n        url: `http://127.0.0.1:3333/api/auth/logout`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n      });\n\n      if (user.data.data === null) return ERequestOutcomes.hasError;\n\n      dispatch({ type: SET_LOGIN_DATA, payload: null });\n      return ERequestOutcomes.success;\n    } catch (error: any) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        authState,\n        getUserData,\n        logoutUser,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// Add.. another\nimport ModalState from \"./context/modal/ModalState\";\nimport JobState from \"./context/jobs/JobsState\";\nimport AuthState from \"./context/auth/AuthState\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthState>\n      <ModalState>\n        <JobState>\n          <App />\n        </JobState>\n      </ModalState>\n    </AuthState>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}