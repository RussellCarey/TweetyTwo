# HAd error with not indenting correctly - used GITHUB to check for errors
# https://stackoverflow.com/questions/57806624/github-actions-how-to-build-project-in-sub-directory
# :) :)

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2!!!!
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm i
        working-directory: client_two

      - run: npm run build
        working-directory: client_two
        env:
          CI: false

      - run: pm2 delete tweety_client
      - run: pm2 delete tweety_server

      - run: pm2 start npm --name "tweety_client" -- run serve
        working-directory: client_two

      - run: npm i
        working-directory: ts_server

      - run: pm2 start npm --name "tweety_server" -- run start-prod
        working-directory: ts_server

      - run: |
          cd ts_server
          touch .env
          echo CALLBACK_URL='${{ secrets.CALLBACK_URL }}' >> .env
          echo PROFILE_URL='${{ secrets.PROFILE_URL }}' >> .env
          echo PROD_CONSUMER_API='${{ secrets.PROD_CONSUMER_API }}' >> .env
          echo PROD_CONSUMER_SECRET_KEY='${{ secrets.PROD_CONSUMER_SECRET_KEY }}' >> .env
          echo PROD_CALLBACK_URL='${{ secrets.PROD_CALLBACK_URL }}' >> .env
          echo AWS_KEY='${{ secrets.AWS_KEY }}' >> .env
          echo AWS_SECRET='${{ secrets.AWS_SECRET }}' >> .env
          echo SPACES_NAME='${{ secrets.SPACES_NAME }}' >> .env
          echo CRYPT_SECRET='${{ secrets.CRYPT_SECRET }}' >> .env
          echo CRYPT='${{ secrets.CRYPT}}' >> .env
          echo DATABASE_URL='${{ secrets.DATABASE_URL}}' >> .env
          echo PORT='${{ secrets.PORT}}' >> .env
          echo PROD_URL='${{ secrets.PROD_URL}}' >> .env
          echo JWT_SECRET='${{ secrets.JWT_SECRET }}' >> .env
          cat .env

      - run: |
          pm2 stop 0
          pm2 start 0
          pm2 stop 1
          pm2 start 1
          pm2 save
          sudo service nginx restart
          pm2 resurrect
