{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/context/jobs/JobsState.tsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_JOBS } from \"./types\";\nimport \"./types\";\nimport JobsReducer from \"./JobsReducer\";\nimport JobsContext from \"./JobsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobState = props => {\n  _s();\n\n  const state = {\n    jobs: [],\n    showCreateWindow: false\n  };\n  const [jobsState, dispatch] = useReducer(JobsReducer, state);\n\n  const getAllJobs = async () => {\n    try {\n      const jobs = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/getAllJobs`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`\n        }\n      });\n      dispatch({\n        action: SET_JOBS,\n        payload: jobs\n      });\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const deletePostByID = async id => {\n    try {\n      const jobDeleting = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/deleteJob`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`\n        },\n        data: {\n          jobID: id\n        }\n      });\n      return jobDeleting;\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const showCreateWindow = () => {\n    dispatch({\n      action: SHOW_WINDOW,\n      payload: jobs\n    });\n  };\n\n  const closeCreateWindow = () => {\n    dispatch({\n      action: CLOSE_WINDOW,\n      payload: jobs\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(JobsContext.Provider, {\n    value: {\n      jobsState,\n      getAllJobs,\n      deletePostByID\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobState, \"svD4X4IdJxmNe9tZACzxCKd4Dao=\");\n\n_c = JobState;\nexport default JobState;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobState\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/context/jobs/JobsState.tsx"],"names":["useReducer","axios","Cookies","ERequestOutcomes","SET_JOBS","JobsReducer","JobsContext","JobState","props","state","jobs","showCreateWindow","jobsState","dispatch","getAllJobs","request","method","withCredentials","url","headers","authorization","get","action","payload","error","hasError","deletePostByID","id","jobDeleting","data","jobID","SHOW_WINDOW","closeCreateWindow","CLOSE_WINDOW","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAe,SAAf;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAWA,MAAMC,QAAQ,GAAIC,KAAD,IAAmB;AAAA;;AAClC,QAAMC,KAAkB,GAAG;AACzBC,IAAAA,IAAI,EAAE,EADmB;AAEzBC,IAAAA,gBAAgB,EAAE;AAFO,GAA3B;AAKA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBb,UAAU,CAACK,WAAD,EAAcI,KAAd,CAAxC;;AAEA,QAAMK,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMJ,IAAI,GAAG,MAAMT,KAAK,CAACc,OAAN,CAAc;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,eAAe,EAAE,IAFc;AAG/BC,QAAAA,GAAG,EAAG,2CAHyB;AAI/BC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,GAAElB,OAAO,CAACmB,GAAR,CAAY,OAAZ,CAAqB;AADhC;AAJsB,OAAd,CAAnB;AASAR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,MAAM,EAAElB,QAAV;AAAoBmB,QAAAA,OAAO,EAAEb;AAA7B,OAAD,CAAR;AACD,KAXD,CAWE,OAAOc,KAAP,EAAmB;AACnB,aAAOrB,gBAAgB,CAACsB,QAAxB;AACD;AACF,GAfD;;AAiBA,QAAMC,cAAc,GAAG,MAAOC,EAAP,IAAsB;AAC3C,QAAI;AACF,YAAMC,WAAW,GAAG,MAAM3B,KAAK,CAACc,OAAN,CAAc;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,eAAe,EAAE,IAFqB;AAGtCC,QAAAA,GAAG,EAAG,0CAHgC;AAItCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,GAAElB,OAAO,CAACmB,GAAR,CAAY,OAAZ,CAAqB;AADhC,SAJ6B;AAOtCQ,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAEH;AADH;AAPgC,OAAd,CAA1B;AAYA,aAAOC,WAAP;AACD,KAdD,CAcE,OAAOJ,KAAP,EAAc;AACd,aAAOrB,gBAAgB,CAACsB,QAAxB;AACD;AACF,GAlBD;;AAoBA,QAAMd,gBAAgB,GAAG,MAAM;AAC7BE,IAAAA,QAAQ,CAAC;AAAES,MAAAA,MAAM,EAAES,WAAV;AAAuBR,MAAAA,OAAO,EAAEb;AAAhC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMsB,iBAAiB,GAAG,MAAM;AAC9BnB,IAAAA,QAAQ,CAAC;AAAES,MAAAA,MAAM,EAAEW,YAAV;AAAwBV,MAAAA,OAAO,EAAEb;AAAjC,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,SADK;AAELE,MAAAA,UAFK;AAGLY,MAAAA;AAHK,KADT;AAAA,cAOGlB,KAAK,CAAC0B;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhED;;GAAM3B,Q;;KAAAA,Q;AAkEN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_JOBS } from \"./types\";\n\nimport {} from \"./types\";\n\nimport JobsReducer from \"./JobsReducer\";\nimport JobsContext from \"./JobsContext\";\n\nexport interface IProps {\n  children: React.ReactNode;\n}\n\ninterface IStateProps {\n  jobs: Array<string> | null;\n  showCreateWindow: boolean;\n}\n\nconst JobState = (props: IProps) => {\n  const state: IStateProps = {\n    jobs: [],\n    showCreateWindow: false,\n  };\n\n  const [jobsState, dispatch] = useReducer(JobsReducer, state);\n\n  const getAllJobs = async () => {\n    try {\n      const jobs = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/getAllJobs`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n      });\n\n      dispatch({ action: SET_JOBS, payload: jobs });\n    } catch (error: any) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const deletePostByID = async (id: string) => {\n    try {\n      const jobDeleting = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/deleteJob`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n        data: {\n          jobID: id,\n        },\n      });\n\n      return jobDeleting;\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const showCreateWindow = () => {\n    dispatch({ action: SHOW_WINDOW, payload: jobs });\n  };\n\n  const closeCreateWindow = () => {\n    dispatch({ action: CLOSE_WINDOW, payload: jobs });\n  };\n\n  return (\n    <JobsContext.Provider\n      value={{\n        jobsState,\n        getAllJobs,\n        deletePostByID,\n      }}\n    >\n      {props.children}\n    </JobsContext.Provider>\n  );\n};\n\nexport default JobState;\n"]},"metadata":{},"sourceType":"module"}