{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/components/navbar/logout-button.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ButtonHover } from \"../../mixins/mixins\";\nimport ModalContext from \"../../context/modal/ModalContext\";\nimport { EModal } from \"../../context/modal/types\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.button`\n  color: ${theme.colors.text.white};\n  background-color: ${theme.colors.ui.blue};\n\n  width: 100px;\n  height: 40px;\n\n  border-radius: 15px;\n\n  outline: none;\n  border: none;\n\n  font-size: ${theme.fonts.fontsizes.medium};\n\n  ${ButtonHover}\n`;\n_c = Container;\n\nconst LogoutButton = () => {\n  _s();\n\n  const modalContext = useContext(ModalContext);\n  const {\n    showModal\n  } = modalContext;\n  const authContext = useContext(AuthContext);\n  const {\n    logoutUser\n  } = authContext;\n\n  const onClickHandler = async () => {\n    showModal(\"Logging out, please wait.\", EModal.isOK);\n    setTimeout(async () => {\n      const logout = await logoutUser();\n      if (logout === ERequestOutcomes.hasError) return showModal(\"Error logging out, please try again\", EModal.hasError);\n    }, 2500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: onClickHandler,\n    children: \"logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LogoutButton, \"vw5xmMjT86gzI171n1u7USa0kQo=\");\n\n_c2 = LogoutButton;\nexport default LogoutButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"LogoutButton\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/components/navbar/logout-button.tsx"],"names":["useContext","styled","theme","ButtonHover","ModalContext","EModal","AuthContext","ERequestOutcomes","Container","button","colors","text","white","ui","blue","fonts","fontsizes","medium","LogoutButton","modalContext","showModal","authContext","logoutUser","onClickHandler","isOK","setTimeout","logout","hasError"],"mappings":";;;AAAA,SAA4BA,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAO;AAChC,WAAWP,KAAK,CAACQ,MAAN,CAAaC,IAAb,CAAkBC,KAAM;AACnC,sBAAsBV,KAAK,CAACQ,MAAN,CAAaG,EAAb,CAAgBC,IAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeZ,KAAK,CAACa,KAAN,CAAYC,SAAZ,CAAsBC,MAAO;AAC5C;AACA,IAAId,WAAY;AAChB,CAfA;KAAMK,S;;AAiBN,MAAMU,YAA+B,GAAG,MAAM;AAAA;;AAC5C,QAAMC,YAAY,GAAGnB,UAAU,CAACI,YAAD,CAA/B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAgBD,YAAtB;AACA,QAAME,WAAW,GAAGrB,UAAU,CAACM,WAAD,CAA9B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAiBD,WAAvB;;AAEA,QAAME,cAAc,GAAG,YAAY;AACjCH,IAAAA,SAAS,CAAC,2BAAD,EAA8Bf,MAAM,CAACmB,IAArC,CAAT;AAEAC,IAAAA,UAAU,CAAC,YAAY;AACrB,YAAMC,MAAM,GAAG,MAAMJ,UAAU,EAA/B;AACA,UAAII,MAAM,KAAKnB,gBAAgB,CAACoB,QAAhC,EACE,OAAOP,SAAS,CAAC,qCAAD,EAAwCf,MAAM,CAACsB,QAA/C,CAAhB;AACH,KAJS,EAIP,IAJO,CAAV;AAKD,GARD;;AASA,sBAAO,QAAC,SAAD;AAAW,IAAA,OAAO,EAAEJ,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBD;;GAAML,Y;;MAAAA,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import { FunctionComponent, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { ButtonHover } from \"../../mixins/mixins\";\nimport ModalContext from \"../../context/modal/ModalContext\";\nimport { EModal } from \"../../context/modal/types\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport { ERequestOutcomes } from \"../../types/errors\";\n\nconst Container = styled.button`\n  color: ${theme.colors.text.white};\n  background-color: ${theme.colors.ui.blue};\n\n  width: 100px;\n  height: 40px;\n\n  border-radius: 15px;\n\n  outline: none;\n  border: none;\n\n  font-size: ${theme.fonts.fontsizes.medium};\n\n  ${ButtonHover}\n`;\n\nconst LogoutButton: FunctionComponent = () => {\n  const modalContext = useContext(ModalContext);\n  const { showModal } = modalContext;\n  const authContext = useContext(AuthContext);\n  const { logoutUser } = authContext;\n\n  const onClickHandler = async () => {\n    showModal(\"Logging out, please wait.\", EModal.isOK);\n\n    setTimeout(async () => {\n      const logout = await logoutUser();\n      if (logout === ERequestOutcomes.hasError)\n        return showModal(\"Error logging out, please try again\", EModal.hasError);\n    }, 2500);\n  };\n  return <Container onClick={onClickHandler}>logout</Container>;\n};\n\nexport default LogoutButton;\n"]},"metadata":{},"sourceType":"module"}