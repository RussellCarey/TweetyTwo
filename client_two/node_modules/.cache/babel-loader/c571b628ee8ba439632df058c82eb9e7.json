{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport \"./styles/global.css\";\nimport LoginView from \"./views/login-view/login-view\";\nimport MainView from \"./views/main/main-view\";\nimport * as Cookies from \"js-cookie\";\nimport ModalContext from \"./context/modal/ModalContext\";\nimport JobsContext from \"./context/jobs/JobsContext\";\nimport AuthContext from \"./context/auth/AuthContext\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showLogin, setShowLogin] = useState(true);\n  const jobsContext = useContext(JobsContext);\n  const {\n    jobsState\n  } = jobsContext;\n  const modalContext = useContext(ModalContext);\n  const {\n    modalState\n  } = modalContext;\n  const authContext = useContext(AuthContext);\n  const {\n    getUserData\n  } = authContext;\n  useEffect(() => {\n    if (Cookies.get(\"token\")) {\n      getUserData();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(MainView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"g4Yi72dlN182ZNqAlQ9ug1Mc5E4=\");\n\n_c = App;\nexport default App; // import { useContext, useEffect, useState } from \"react\";\n// import \"./styles/global.css\";\n// import LoginView from \"./views/login-view/login-view\";\n// import MainView from \"./views/main/main-view\";\n// import * as Cookies from \"js-cookie\";\n// import CreateWindow from \"./components/create-window\";\n// import ModalContext from \"./context/modal/ModalContext\";\n// import JobsContext from \"./context/jobs/JobsContext\";\n// import Modal from \"./components/modal\";\n// import AuthContext from \"./context/auth/AuthContext\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n// function App() {\n//   const [showLogin, setShowLogin] = useState(true);\n//   const jobsContext = useContext(JobsContext);\n//   const { jobsState } = jobsContext;\n//   const modalContext = useContext(ModalContext);\n//   const { modalState } = modalContext;\n//   const authContext = useContext(AuthContext);\n//   const { getUserData } = authContext;\n//   useEffect(() => {\n//     if (Cookies.get(\"token\")) {\n//       getUserData();\n//     }\n//   }, []);\n//   return (\n//     <>\n//       {modalState.show ? <Modal /> : null}\n//       {showLogin ? <LoginView setShowLogin={setShowLogin} /> : null}\n//       {Cookies.get(\"connect.sid\") ? <MainView /> : null}\n//       {jobsState.showCreateWindow === true ? <CreateWindow /> : null}\n//     </>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/App.tsx"],"names":["useContext","useEffect","useState","LoginView","MainView","Cookies","ModalContext","JobsContext","AuthContext","BrowserRouter","Router","Routes","Route","App","showLogin","setShowLogin","jobsContext","jobsState","modalContext","modalState","authContext","getUserData","get"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAA6D,kBAA7D;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMc,WAAW,GAAGhB,UAAU,CAACO,WAAD,CAA9B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAgBD,WAAtB;AACA,QAAME,YAAY,GAAGlB,UAAU,CAACM,YAAD,CAA/B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAiBD,YAAvB;AACA,QAAME,WAAW,GAAGpB,UAAU,CAACQ,WAAD,CAA9B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBD,WAAxB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,OAAO,CAACiB,GAAR,CAAY,OAAZ,CAAJ,EAA0B;AACxBD,MAAAA,WAAW;AACZ;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD;;GAzBQR,G;;KAAAA,G;AA2BT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport \"./styles/global.css\";\nimport LoginView from \"./views/login-view/login-view\";\nimport MainView from \"./views/main/main-view\";\nimport * as Cookies from \"js-cookie\";\nimport CreateWindow from \"./components/create-window\";\nimport ModalContext from \"./context/modal/ModalContext\";\nimport JobsContext from \"./context/jobs/JobsContext\";\nimport Modal from \"./components/modal\";\nimport AuthContext from \"./context/auth/AuthContext\";\n\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [showLogin, setShowLogin] = useState(true);\n  const jobsContext = useContext(JobsContext);\n  const { jobsState } = jobsContext;\n  const modalContext = useContext(ModalContext);\n  const { modalState } = modalContext;\n  const authContext = useContext(AuthContext);\n  const { getUserData } = authContext;\n\n  useEffect(() => {\n    if (Cookies.get(\"token\")) {\n      getUserData();\n    }\n  }, []);\n\n  return (\n    <>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<LoginView />} />\n          <Route path=\"/dashboard\" element={<MainView />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n// import { useContext, useEffect, useState } from \"react\";\n// import \"./styles/global.css\";\n// import LoginView from \"./views/login-view/login-view\";\n// import MainView from \"./views/main/main-view\";\n// import * as Cookies from \"js-cookie\";\n// import CreateWindow from \"./components/create-window\";\n// import ModalContext from \"./context/modal/ModalContext\";\n// import JobsContext from \"./context/jobs/JobsContext\";\n// import Modal from \"./components/modal\";\n// import AuthContext from \"./context/auth/AuthContext\";\n\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\n// function App() {\n//   const [showLogin, setShowLogin] = useState(true);\n//   const jobsContext = useContext(JobsContext);\n//   const { jobsState } = jobsContext;\n//   const modalContext = useContext(ModalContext);\n//   const { modalState } = modalContext;\n//   const authContext = useContext(AuthContext);\n//   const { getUserData } = authContext;\n\n//   useEffect(() => {\n//     if (Cookies.get(\"token\")) {\n//       getUserData();\n//     }\n//   }, []);\n\n//   return (\n//     <>\n//       {modalState.show ? <Modal /> : null}\n//       {showLogin ? <LoginView setShowLogin={setShowLogin} /> : null}\n//       {Cookies.get(\"connect.sid\") ? <MainView /> : null}\n//       {jobsState.showCreateWindow === true ? <CreateWindow /> : null}\n//     </>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}