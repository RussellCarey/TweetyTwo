{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/components/login-box/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { Title } from \"../resuable-styled/text\";\nimport LoginButton from \"./button\";\nimport LoginProfileImage from \"./profile-image\";\nimport * as Cookies from \"js-cookie\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled(animated.div)`\n  width: 400px;\n  height: 500px;\n  z-index: 10;\n  background-color: ${theme.colors.ui.main};\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n\n  display: ${props => props.isActive ? \"initial\" : \"none\"};\n`;\n_c = Container;\nconst LoginTitle = styled(Title)`\n  margin-bottom: ${theme.spacing.space.xxlarge};\n`;\n_c2 = LoginTitle;\n\nconst LoginBox = () => {\n  _s();\n\n  const [loggedin, setLoggedIn] = useState(false);\n  const [isActive, setIsActive] = useState(true);\n  const authContext = useContext(AuthContext);\n  const {\n    authState,\n    getUserData\n  } = authContext; // const Container = styled(animated.div)``\n  // <Container style={animationProps}>\n\n  const windowHideAnimation = useSpring({\n    from: {\n      opacity: 1\n    },\n    to: {\n      opacity: 0\n    },\n    delay: 1000\n  });\n  useEffect(() => {\n    if (Cookies.get(\"token\")) {\n      getUserData();\n    }\n\n    if (authState.user) {\n      setLoggedIn(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: loggedin ? windowHideAnimation : null,\n    isActive: isActive,\n    children: [!loggedin ? /*#__PURE__*/_jsxDEV(LoginTitle, {\n      children: \"Welcome to Tweety\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this) : null, loggedin ? /*#__PURE__*/_jsxDEV(LoginTitle, {\n      children: [\"Welcome \", authState.user.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this) : null, /*#__PURE__*/_jsxDEV(LoginProfileImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), !loggedin ? /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginBox, \"6N/VXVO/g1JPeh+evsHoDdKuYqQ=\", false, function () {\n  return [useSpring];\n});\n\n_c3 = LoginBox;\nexport default LoginBox;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"LoginTitle\");\n$RefreshReg$(_c3, \"LoginBox\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/components/login-box/index.tsx"],"names":["useContext","useEffect","useState","styled","theme","Title","LoginButton","LoginProfileImage","Cookies","AuthContext","useSpring","animated","Container","div","colors","ui","main","props","isActive","LoginTitle","spacing","space","xxlarge","LoginBox","loggedin","setLoggedIn","setIsActive","authContext","authState","getUserData","windowHideAnimation","from","opacity","to","delay","get","user","displayName"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;AAMA,MAAMC,SAAS,GAAGT,MAAM,CAACQ,QAAQ,CAACE,GAAV,CAAe;AACvC;AACA;AACA;AACA,sBAAsBT,KAAK,CAACU,MAAN,CAAaC,EAAb,CAAgBC,IAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcC,KAAD,IAA4BA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,MAAQ;AAC9E,CAbA;KAAMN,S;AAeN,MAAMO,UAAU,GAAGhB,MAAM,CAACE,KAAD,CAAQ;AACjC,mBAAmBD,KAAK,CAACgB,OAAN,CAAcC,KAAd,CAAoBC,OAAQ;AAC/C,CAFA;MAAMH,U;;AAIN,MAAMI,QAA2B,GAAG,MAAM;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWQ,WAAX,IAA0BxB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMyB,WAAW,GAAG3B,UAAU,CAACS,WAAD,CAA9B;AACA,QAAM;AAAEmB,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BF,WAAnC,CAJwC,CAMxC;AACA;;AAEA,QAAMG,mBAAmB,GAAGpB,SAAS,CAAC;AACpCqB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD8B;AAEpCC,IAAAA,EAAE,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KAFgC;AAGpCE,IAAAA,KAAK,EAAE;AAH6B,GAAD,CAArC;AAMAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,CAAC2B,GAAR,CAAY,OAAZ,CAAJ,EAA0B;AACxBN,MAAAA,WAAW;AACZ;;AAED,QAAID,SAAS,CAACQ,IAAd,EAAoB;AAClBX,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAED,QAAQ,GAAGM,mBAAH,GAAyB,IAAnD;AAAyD,IAAA,QAAQ,EAAEZ,QAAnE;AAAA,eACG,CAACM,QAAD,gBAAY,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,GAAyD,IAD5D,EAEGA,QAAQ,gBAAG,QAAC,UAAD;AAAA,6BAAqBI,SAAS,CAACQ,IAAV,CAAeC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAmE,IAF9E,eAGE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAHF,EAIG,CAACb,QAAD,gBAAY,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAZ,GAA8B,IAJjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjCD;;GAAMD,Q;UASwBb,S;;;MATxBa,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { Title } from \"../resuable-styled/text\";\nimport LoginButton from \"./button\";\nimport LoginProfileImage from \"./profile-image\";\nimport * as Cookies from \"js-cookie\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport { useSpring, animated } from \"react-spring\";\n\ninterface ContainerProps {\n  isActive: boolean;\n}\n\nconst Container = styled(animated.div)`\n  width: 400px;\n  height: 500px;\n  z-index: 10;\n  background-color: ${theme.colors.ui.main};\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n\n  display: ${(props: ContainerProps) => (props.isActive ? \"initial\" : \"none\")};\n`;\n\nconst LoginTitle = styled(Title)`\n  margin-bottom: ${theme.spacing.space.xxlarge};\n`;\n\nconst LoginBox: FunctionComponent = () => {\n  const [loggedin, setLoggedIn] = useState(false);\n  const [isActive, setIsActive] = useState(true);\n  const authContext = useContext(AuthContext);\n  const { authState, getUserData } = authContext;\n\n  // const Container = styled(animated.div)``\n  // <Container style={animationProps}>\n\n  const windowHideAnimation = useSpring({\n    from: { opacity: 1 },\n    to: { opacity: 0 },\n    delay: 1000,\n  });\n\n  useEffect(() => {\n    if (Cookies.get(\"token\")) {\n      getUserData();\n    }\n\n    if (authState.user) {\n      setLoggedIn(true);\n    }\n  }, []);\n\n  return (\n    <Container style={loggedin ? windowHideAnimation : null} isActive={isActive}>\n      {!loggedin ? <LoginTitle>Welcome to Tweety</LoginTitle> : null}\n      {loggedin ? <LoginTitle>Welcome {authState.user.displayName}</LoginTitle> : null}\n      <LoginProfileImage />\n      {!loggedin ? <LoginButton /> : null}\n    </Container>\n  );\n};\n\nexport default LoginBox;\n"]},"metadata":{},"sourceType":"module"}