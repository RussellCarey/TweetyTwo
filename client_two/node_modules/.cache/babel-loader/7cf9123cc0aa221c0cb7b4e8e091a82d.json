{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/context/jobs/JobsState.tsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_JOBS, SET_ALL_JOBS, RESET_JOBS, SHOW_WINDOW, CLOSE_WINDOW, EOrderJobs } from \"./types\";\nimport JobsReducer from \"./JobsReducer\";\nimport JobsContext from \"./JobsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobState = props => {\n  _s();\n\n  const state = {\n    jobs: [],\n    jobsOriginal: [],\n    showCreateWindow: false\n  };\n  const [jobsState, dispatch] = useReducer(JobsReducer, state);\n\n  const getAllJobs = async () => {\n    try {\n      const jobs = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/getAllJobs`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`\n        }\n      });\n      dispatch({\n        type: SET_ALL_JOBS,\n        payload: jobs.data.data.rows\n      });\n    } catch (error) {\n      //! Just show modal, no need to return..\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const deletePostByID = async id => {\n    try {\n      const jobDeleting = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/deleteJob`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`\n        },\n        data: {\n          jobID: id\n        }\n      });\n      return jobDeleting;\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const removeJobFromState = id => {\n    const jobs = jobsState.jobs;\n    const deleteJob = jobs.filter(job => job.job_id !== id);\n    dispatch({\n      type: SET_JOBS,\n      payload: deleteJob\n    });\n  };\n\n  const searchJobsByText = text => {\n    if (text === \"\") return dispatch({\n      type: RESET_JOBS\n    });\n    const jobsStateJobs = jobsState.jobs.filter(jobs => jobs.message.toLowerCase().includes(text.toLowerCase()));\n    dispatch({\n      type: SET_JOBS,\n      payload: jobsStateJobs\n    });\n  };\n\n  const orderJobsByField = type => {\n    if (EOrderJobs.status) {\n      const sortLetter = (a, b) => a.status > b.status ? 1 : b.status > a.status ? -1 : 0;\n\n      const sortedJobs = jobsState.jobsOriginal.sort(sortLetter);\n      dispatch({\n        type: SET_JOBS,\n        payload: sortedJobs\n      });\n    }\n\n    if (EOrderJobs.dateasc) {\n      const sortedDate = (a, b) => new Date(a.date).getTime() > new Date(b.date).getTime() ? 1 : new Date(b.date).getTime() > new Date(a.date).getTime() ? -1 : 0;\n\n      const sortedJobs = jobsState.jobsOriginal.sort(sortedDate);\n      dispatch({\n        type: SET_JOBS,\n        payload: sortedJobs\n      });\n    }\n\n    if (EOrderJobs.datedec) {\n      const sortedDate = (a, b) => new Date(a.date).getTime() > new Date(b.date).getTime() ? -1 : new Date(b.date).getTime() > new Date(a.date).getTime() ? 1 : 0;\n\n      const sortedJobs = jobsState.jobsOriginal.sort(sortedDate);\n      dispatch({\n        type: SET_JOBS,\n        payload: sortedJobs\n      });\n    }\n  };\n\n  const showCreateWindow = () => {\n    console.log(\"Show create window\");\n    dispatch({\n      type: SHOW_WINDOW\n    });\n  };\n\n  const closeCreateWindow = () => {\n    console.log(\"Close create window\");\n    dispatch({\n      type: CLOSE_WINDOW\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(JobsContext.Provider, {\n    value: {\n      jobsState,\n      getAllJobs,\n      deletePostByID,\n      showCreateWindow,\n      closeCreateWindow,\n      searchJobsByText,\n      orderJobsByField,\n      removeJobFromState\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobState, \"svD4X4IdJxmNe9tZACzxCKd4Dao=\");\n\n_c = JobState;\nexport default JobState;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobState\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/context/jobs/JobsState.tsx"],"names":["useReducer","axios","Cookies","ERequestOutcomes","SET_JOBS","SET_ALL_JOBS","RESET_JOBS","SHOW_WINDOW","CLOSE_WINDOW","EOrderJobs","JobsReducer","JobsContext","JobState","props","state","jobs","jobsOriginal","showCreateWindow","jobsState","dispatch","getAllJobs","request","method","withCredentials","url","headers","authorization","get","type","payload","data","rows","error","hasError","deletePostByID","id","jobDeleting","jobID","removeJobFromState","deleteJob","filter","job","job_id","searchJobsByText","text","jobsStateJobs","message","toLowerCase","includes","orderJobsByField","status","sortLetter","a","b","sortedJobs","sort","dateasc","sortedDate","Date","date","getTime","datedec","console","log","closeCreateWindow","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\n\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_JOBS, SET_ALL_JOBS, RESET_JOBS, SHOW_WINDOW, CLOSE_WINDOW, IJobsState, EOrderJobs } from \"./types\";\n\nimport { IJobObject } from \"./types\";\n\nimport JobsReducer from \"./JobsReducer\";\nimport JobsContext from \"./JobsContext\";\n\nexport interface IProps {\n  children: React.ReactNode;\n}\n\nconst JobState = (props: IProps) => {\n  const state: IJobsState = {\n    jobs: [],\n    jobsOriginal: [],\n    showCreateWindow: false,\n  };\n\n  const [jobsState, dispatch] = useReducer(JobsReducer, state);\n\n  const getAllJobs = async () => {\n    try {\n      const jobs = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/getAllJobs`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n      });\n\n      dispatch({ type: SET_ALL_JOBS, payload: jobs.data.data.rows });\n    } catch (error: any) {\n      //! Just show modal, no need to return..\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const deletePostByID = async (id: string) => {\n    try {\n      const jobDeleting = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/deleteJob`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n        data: {\n          jobID: id,\n        },\n      });\n\n      return jobDeleting;\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const removeJobFromState = (id: string) => {\n    const jobs = jobsState.jobs;\n    const deleteJob = jobs.filter((job: IJobObject) => job.job_id !== id);\n    dispatch({ type: SET_JOBS, payload: deleteJob });\n  };\n\n  const searchJobsByText = (text: string) => {\n    if (text === \"\") return dispatch({ type: RESET_JOBS });\n    const jobsStateJobs = jobsState.jobs.filter((jobs: IJobObject) =>\n      jobs.message.toLowerCase().includes(text.toLowerCase())\n    );\n    dispatch({ type: SET_JOBS, payload: jobsStateJobs });\n  };\n\n  const orderJobsByField = (type: EOrderJobs) => {\n    if (EOrderJobs.status) {\n      const sortLetter = (a: IJobObject, b: IJobObject) => (a.status > b.status ? 1 : b.status > a.status ? -1 : 0);\n\n      const sortedJobs = jobsState.jobsOriginal.sort(sortLetter);\n      dispatch({ type: SET_JOBS, payload: sortedJobs });\n    }\n\n    if (EOrderJobs.dateasc) {\n      const sortedDate = (a: IJobObject, b: IJobObject) =>\n        new Date(a.date).getTime() > new Date(b.date).getTime()\n          ? 1\n          : new Date(b.date).getTime() > new Date(a.date).getTime()\n          ? -1\n          : 0;\n\n      const sortedJobs = jobsState.jobsOriginal.sort(sortedDate);\n      dispatch({ type: SET_JOBS, payload: sortedJobs });\n    }\n\n    if (EOrderJobs.datedec) {\n      const sortedDate = (a: IJobObject, b: IJobObject) =>\n        new Date(a.date).getTime() > new Date(b.date).getTime()\n          ? -1\n          : new Date(b.date).getTime() > new Date(a.date).getTime()\n          ? 1\n          : 0;\n\n      const sortedJobs = jobsState.jobsOriginal.sort(sortedDate);\n      dispatch({ type: SET_JOBS, payload: sortedJobs });\n    }\n  };\n\n  const showCreateWindow = () => {\n    console.log(\"Show create window\");\n    dispatch({ type: SHOW_WINDOW });\n  };\n\n  const closeCreateWindow = () => {\n    console.log(\"Close create window\");\n    dispatch({ type: CLOSE_WINDOW });\n  };\n\n  return (\n    <JobsContext.Provider\n      value={{\n        jobsState,\n        getAllJobs,\n        deletePostByID,\n        showCreateWindow,\n        closeCreateWindow,\n        searchJobsByText,\n        orderJobsByField,\n        removeJobFromState,\n      }}\n    >\n      {props.children}\n    </JobsContext.Provider>\n  );\n};\n\nexport default JobState;\n"]},"metadata":{},"sourceType":"module"}