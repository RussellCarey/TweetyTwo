{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/components/create-window/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport TextArea from \"./textbox\";\nimport InputsContainer from \"./inputs-container\";\nimport DateTimeInput from \"./input\";\nimport CreateButtons from \"./button\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { uploadImageFile } from \"./services/dbServices\";\nimport { checkDateInputs, checkWordCount } from \"../../utils/check-inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 500;\n\n  width: 100vw;\n  height: 150px;\n  padding: ${theme.spacing.space.large} ${theme.spacing.space.xxxlage};\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: ${theme.colors.ui.main};\n  box-shadow: 0 -20px 30px rgba(0, 0, 0, 0.2);\n`;\n_c = Container;\nconst FileInput = styled.input`\n  display: none;\n  opacity: 100%;\n`;\n_c2 = FileInput;\n\nconst CreateWindow = () => {\n  _s();\n\n  const imageInputElement = useRef();\n  const [file, setFile] = useState();\n  const [tweet, setTweet] = useState({\n    message: \"\",\n    date: \"\",\n    time: \"\"\n  });\n\n  const dateChangeHandler = e => {\n    const target = e.target;\n    console.log(target.value);\n    setTweet({ ...tweet,\n      date: target.value\n    });\n  };\n\n  const timeChangeHandler = e => {\n    const target = e.target;\n    console.log(target.value);\n    setTweet({ ...tweet,\n      time: target.value\n    });\n  };\n\n  const imageOnClickHandler = () => {\n    imageInputElement.current.click();\n  };\n\n  const imageOnChangeHandler = e => {\n    const target = e.target;\n    console.log(target.files[0]);\n    setFile(target.files[0]);\n  };\n\n  const uploadImage = async () => {\n    if (!file) return ERequestOutcomes.isEmpty;\n    const uploadImageReq = await uploadImageFile(file);\n    if (uploadImageReq.hasError) return ERequestOutcomes.hasError;\n    return uploadImageReq;\n  }; //! Need to add modal and resposnes from modal..\n\n\n  const handleSubmitClick = async () => {\n    // Text checks - show modal if error and return.\n    if (!checkWordCount(tweet.message.length)) return;\n    if (!checkDateInputs(tweet.date, tweet.time)) return;\n    const uploadImageAttempt = await uploadImage();\n\n    try {\n      const post = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/message`,\n        data: {\n          date: tweet.date,\n          time: tweet.time,\n          message: tweet.message,\n          imageURL: uploadImageAttempt !== ERequestOutcomes.isEmpty ? uploadImageAttempt.url : null,\n          imageName: uploadImageAttempt !== ERequestOutcomes.isEmpty ? uploadImageAttempt.name : null\n        },\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`\n        }\n      }); //! modal on success\n    } catch (error) {\n      //!modal on error\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TextArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DateTimeInput, {\n        type: \"date\",\n        onChange: dateChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeInput, {\n        type: \"time\",\n        onChange: timeChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateButtons, {\n        text: \"add image\",\n        onClick: imageOnClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateButtons, {\n        text: \"submit\",\n        onClick: handleSubmitClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n        id: \"file-select\",\n        type: \"file\",\n        accept: \"image/*\",\n        ref: imageInputElement,\n        onChange: imageOnChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateWindow, \"tUlMdeG8voe4xHp6RDmaBClYacU=\");\n\n_c3 = CreateWindow;\nexport default CreateWindow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"FileInput\");\n$RefreshReg$(_c3, \"CreateWindow\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/components/create-window/index.tsx"],"names":["React","useState","useRef","axios","Cookies","styled","theme","TextArea","InputsContainer","DateTimeInput","CreateButtons","ERequestOutcomes","uploadImageFile","checkDateInputs","checkWordCount","Container","div","spacing","space","large","xxxlage","colors","ui","main","FileInput","input","CreateWindow","imageInputElement","file","setFile","tweet","setTweet","message","date","time","dateChangeHandler","e","target","console","log","value","timeChangeHandler","imageOnClickHandler","current","click","imageOnChangeHandler","files","uploadImage","isEmpty","uploadImageReq","hasError","handleSubmitClick","length","uploadImageAttempt","post","request","method","withCredentials","url","data","imageURL","imageName","name","headers","authorization","get","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,EAA6CC,MAA7C,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,aAAP,MAA0B,UAA1B;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,0BAAhD;;AAEA,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaV,KAAK,CAACW,OAAN,CAAcC,KAAd,CAAoBC,KAAM,IAAGb,KAAK,CAACW,OAAN,CAAcC,KAAd,CAAoBE,OAAQ;AACtE;AACA;AACA;AACA;AACA;AACA,sBAAsBd,KAAK,CAACe,MAAN,CAAaC,EAAb,CAAgBC,IAAK;AAC3C;AACA,CAhBA;KAAMR,S;AAkBN,MAAMS,SAAS,GAAGnB,MAAM,CAACoB,KAAM;AAC/B;AACA;AACA,CAHA;MAAMD,S;;AAKN,MAAME,YAA+B,GAAG,MAAM;AAAA;;AAC5C,QAAMC,iBAAiB,GAAGzB,MAAM,EAAhC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,EAAhC;AACA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC;AACjC+B,IAAAA,OAAO,EAAE,EADwB;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,IAAI,EAAE;AAH2B,GAAD,CAAlC;;AAMA,QAAMC,iBAAiB,GAAIC,CAAD,IAAyB;AACjD,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAnB;AACAT,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,MAAAA,IAAI,EAAEI,MAAM,CAACG;AAAzB,KAAD,CAAR;AACD,GAJD;;AAMA,QAAMC,iBAAiB,GAAIL,CAAD,IAAyB;AACjD,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAnB;AACAT,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYI,MAAAA,IAAI,EAAEG,MAAM,CAACG;AAAzB,KAAD,CAAR;AACD,GAJD;;AAMA,QAAME,mBAAmB,GAAG,MAAM;AAChCf,IAAAA,iBAAiB,CAACgB,OAAlB,CAA0BC,KAA1B;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIT,CAAD,IAA0B;AACrD,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACS,KAAP,CAAc,CAAd,CAAZ;AACAjB,IAAAA,OAAO,CAACQ,MAAM,CAACS,KAAP,CAAc,CAAd,CAAD,CAAP;AACD,GAJD;;AAMA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAI,CAACnB,IAAL,EAAW,OAAOjB,gBAAgB,CAACqC,OAAxB;AACX,UAAMC,cAAc,GAAG,MAAMrC,eAAe,CAACgB,IAAD,CAA5C;AACA,QAAIqB,cAAc,CAACC,QAAnB,EAA6B,OAAOvC,gBAAgB,CAACuC,QAAxB;AAC7B,WAAOD,cAAP;AACD,GALD,CA/B4C,CAsC5C;;;AACA,QAAME,iBAAiB,GAAG,YAAY;AACpC;AACA,QAAI,CAACrC,cAAc,CAACgB,KAAK,CAACE,OAAN,CAAcoB,MAAf,CAAnB,EAA2C;AAC3C,QAAI,CAACvC,eAAe,CAACiB,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACI,IAAnB,CAApB,EAA8C;AAE9C,UAAMmB,kBAAkB,GAAG,MAAMN,WAAW,EAA5C;;AAEA,QAAI;AACF,YAAMO,IAAI,GAAG,MAAMnD,KAAK,CAACoD,OAAN,CAAc;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,eAAe,EAAE,IAFc;AAG/BC,QAAAA,GAAG,EAAG,wCAHyB;AAI/BC,QAAAA,IAAI,EAAE;AACJ1B,UAAAA,IAAI,EAAEH,KAAK,CAACG,IADR;AAEJC,UAAAA,IAAI,EAAEJ,KAAK,CAACI,IAFR;AAGJF,UAAAA,OAAO,EAAEF,KAAK,CAACE,OAHX;AAIJ4B,UAAAA,QAAQ,EAAEP,kBAAkB,KAAK1C,gBAAgB,CAACqC,OAAxC,GAAkDK,kBAAkB,CAACK,GAArE,GAA2E,IAJjF;AAKJG,UAAAA,SAAS,EAAER,kBAAkB,KAAK1C,gBAAgB,CAACqC,OAAxC,GAAkDK,kBAAkB,CAACS,IAArE,GAA4E;AALnF,SAJyB;AAW/BC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,GAAE5D,OAAO,CAAC6D,GAAR,CAAY,OAAZ,CAAqB;AADhC;AAXsB,OAAd,CAAnB,CADE,CAiBF;AACD,KAlBD,CAkBE,OAAOC,KAAP,EAAc;AACd;AACA;AACD;AACF,GA7BD;;AA+BA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,MAArB;AAA6B,QAAA,QAAQ,EAAE/B;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,MAArB;AAA6B,QAAA,QAAQ,EAAEM;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,WAApB;AAAgC,QAAA,OAAO,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,QAArB;AAA+B,QAAA,OAAO,EAAES;AAAxC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,MAAM,EAAC,SAHT;AAIE,QAAA,GAAG,EAAExB,iBAJP;AAKE,QAAA,QAAQ,EAAEkB;AALZ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxFD;;GAAMnB,Y;;MAAAA,Y;AA0FN,eAAeA,YAAf","sourcesContent":["import React, { FunctionComponent, useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nimport TextArea from \"./textbox\";\nimport InputsContainer from \"./inputs-container\";\nimport DateTimeInput from \"./input\";\nimport CreateButtons from \"./button\";\n\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { uploadImageFile } from \"./services/dbServices\";\n\nimport { checkDateInputs, checkWordCount } from \"../../utils/check-inputs\";\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 500;\n\n  width: 100vw;\n  height: 150px;\n  padding: ${theme.spacing.space.large} ${theme.spacing.space.xxxlage};\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: ${theme.colors.ui.main};\n  box-shadow: 0 -20px 30px rgba(0, 0, 0, 0.2);\n`;\n\nconst FileInput = styled.input`\n  display: none;\n  opacity: 100%;\n`;\n\nconst CreateWindow: FunctionComponent = () => {\n  const imageInputElement = useRef() as React.MutableRefObject<HTMLInputElement>;\n  const [file, setFile] = useState<File | null>();\n  const [tweet, setTweet] = useState({\n    message: \"\",\n    date: \"\",\n    time: \"\",\n  });\n\n  const dateChangeHandler = (e: React.MouseEvent) => {\n    const target = e.target as HTMLInputElement;\n    console.log(target.value);\n    setTweet({ ...tweet, date: target.value });\n  };\n\n  const timeChangeHandler = (e: React.MouseEvent) => {\n    const target = e.target as HTMLInputElement;\n    console.log(target.value);\n    setTweet({ ...tweet, time: target.value });\n  };\n\n  const imageOnClickHandler = () => {\n    imageInputElement.current.click();\n  };\n\n  const imageOnChangeHandler = (e: React.ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    console.log(target.files![0]);\n    setFile(target.files![0]);\n  };\n\n  const uploadImage = async () => {\n    if (!file) return ERequestOutcomes.isEmpty;\n    const uploadImageReq = await uploadImageFile(file);\n    if (uploadImageReq.hasError) return ERequestOutcomes.hasError;\n    return uploadImageReq;\n  };\n\n  //! Need to add modal and resposnes from modal..\n  const handleSubmitClick = async () => {\n    // Text checks - show modal if error and return.\n    if (!checkWordCount(tweet.message.length)) return;\n    if (!checkDateInputs(tweet.date, tweet.time)) return;\n\n    const uploadImageAttempt = await uploadImage();\n\n    try {\n      const post = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/message`,\n        data: {\n          date: tweet.date,\n          time: tweet.time,\n          message: tweet.message,\n          imageURL: uploadImageAttempt !== ERequestOutcomes.isEmpty ? uploadImageAttempt.url : null,\n          imageName: uploadImageAttempt !== ERequestOutcomes.isEmpty ? uploadImageAttempt.name : null,\n        },\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n      });\n\n      //! modal on success\n    } catch (error) {\n      //!modal on error\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <TextArea />\n      <InputsContainer>\n        <DateTimeInput type={\"date\"} onChange={dateChangeHandler} />\n        <DateTimeInput type={\"time\"} onChange={timeChangeHandler} />\n        <CreateButtons text=\"add image\" onClick={imageOnClickHandler} />\n        <CreateButtons text={\"submit\"} onClick={handleSubmitClick} />\n        <FileInput\n          id=\"file-select\"\n          type=\"file\"\n          accept=\"image/*\"\n          ref={imageInputElement}\n          onChange={imageOnChangeHandler}\n        />\n      </InputsContainer>\n    </Container>\n  );\n};\n\nexport default CreateWindow;\n"]},"metadata":{},"sourceType":"module"}