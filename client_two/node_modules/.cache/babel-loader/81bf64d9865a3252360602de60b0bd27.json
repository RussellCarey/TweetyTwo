{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/components/modal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport { EModal } from \"../../context/modal/types\";\nimport ModalContext from \"../../context/modal/ModalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: max-content;\n  height: max-content;\n  border-radius: 15px;\n\n  position: absolute;\n  top: ${theme.spacing.space.large};\n  left: calc(50vw - (max-content / 2));\n  z-index: 1000;\n\n  outline: 5px solid ${theme.colors.border.mainDark};\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n\n  color: ${theme.colors.text.white};\n  padding: ${theme.spacing.space.large};\n  background-color: ${props => props.type === EModal.hasError ? theme.colors.modal.error : theme.colors.modal.ok};\n`;\n_c = Container;\n\nconst Modal = () => {\n  _s();\n\n  const modalContext = useContext(ModalContext);\n  const {\n    modalState,\n    hideModal\n  } = modalContext;\n  useEffect(() => {\n    setTimeout(() => {\n      hideModal();\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    type: modalState.type,\n    children: modalState.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Modal, \"+8cYAD4qP9XV/d5GGh8gwTM3F/0=\");\n\n_c2 = Modal;\nexport default Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/components/modal/index.tsx"],"names":["useContext","useEffect","styled","theme","EModal","ModalContext","Container","div","spacing","space","large","colors","border","mainDark","text","white","props","type","hasError","modal","error","ok","Modal","modalContext","modalState","hideModal","setTimeout"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAMA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,SAASJ,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBC,KAAM;AACnC;AACA;AACA;AACA,uBAAuBP,KAAK,CAACQ,MAAN,CAAaC,MAAb,CAAoBC,QAAS;AACpD;AACA;AACA,WAAWV,KAAK,CAACQ,MAAN,CAAaG,IAAb,CAAkBC,KAAM;AACnC,aAAaZ,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBC,KAAM;AACvC,sBAAuBM,KAAD,IAClBA,KAAK,CAACC,IAAN,KAAeb,MAAM,CAACc,QAAtB,GAAiCf,KAAK,CAACQ,MAAN,CAAaQ,KAAb,CAAmBC,KAApD,GAA4DjB,KAAK,CAACQ,MAAN,CAAaQ,KAAb,CAAmBE,EAAG;AACtF,CAjBA;KAAMf,S;;AAmBN,MAAMgB,KAAwB,GAAG,MAAM;AAAA;;AACrC,QAAMC,YAAY,GAAGvB,UAAU,CAACK,YAAD,CAA/B;AACA,QAAM;AAAEmB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BF,YAAlC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,SAAS;AACV,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBAAO,QAAC,SAAD;AAAW,IAAA,IAAI,EAAED,UAAU,CAACP,IAA5B;AAAA,cAAmCO,UAAU,CAACV;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;GAAMQ,K;;MAAAA,K;AAaN,eAAeA,KAAf","sourcesContent":["import { FunctionComponent, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nimport { EModal } from \"../../context/modal/types\";\nimport ModalContext from \"../../context/modal/ModalContext\";\n\ninterface ICompProps {\n  type: EModal;\n}\n\nconst Container = styled.div`\n  width: max-content;\n  height: max-content;\n  border-radius: 15px;\n\n  position: absolute;\n  top: ${theme.spacing.space.large};\n  left: calc(50vw - (max-content / 2));\n  z-index: 1000;\n\n  outline: 5px solid ${theme.colors.border.mainDark};\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n\n  color: ${theme.colors.text.white};\n  padding: ${theme.spacing.space.large};\n  background-color: ${(props: ICompProps) =>\n    props.type === EModal.hasError ? theme.colors.modal.error : theme.colors.modal.ok};\n`;\n\nconst Modal: FunctionComponent = () => {\n  const modalContext = useContext(ModalContext);\n  const { modalState, hideModal } = modalContext;\n\n  useEffect(() => {\n    setTimeout(() => {\n      hideModal();\n    }, 3000);\n  }, []);\n\n  return <Container type={modalState.type}>{modalState.text}</Container>;\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}