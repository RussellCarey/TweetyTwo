# HAd error with not indenting correctly - used GITHUB to check for errors
# https://stackoverflow.com/questions/57806624/github-actions-how-to-build-project-in-sub-directory
# :) :)

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: self-hosted
    steps:
      # Causes processes to be removed #ERROR - uses: actions/checkout@v2!!!!!
      - name: Create env file
        run: |
          cd ts_server
          touch .env
          echo API_KEY=${{ secrets.API_KEY }} >> .env
          # Twitter details
          echo API_KEY=${{ secrets.CONSUMER_API }} >> .env
          echo API_KEY=${{ secrets.CONSUMER_SECRET }} >> .env
          echo API_KEY=${{ secrets.CALLBACK_URL }} >> .env
          echo API_KEY=${{ secrets.PROFILE_URL }} >> .env
          echo API_KEY=${{ secrets.PROD_CONSUMER_API }} >> .env
          echo API_KEY=${{ secrets.PROD_CONSUMER_SECRET_KEY }} >> .env
          echo API_KEY=${{ secrets.PROD_CALLBACK_URL }} >> .env
          echo API_KEY=${{ secrets.AWS_KEY }} >> .env
          echo API_KEY=${{ secrets.AWS_SECRET }} >> .env
          echo API_KEY=${{ secrets.SPACES_NAME }} >> .env
          echo API_KEY=${{ secrets.JWT_SECRET }} >> .env
          echo API_KEY=${{ secrets.CRYPT_SECRET }} >> .env
          echo API_KEY=${{ secrets.CRYPT}} >> .env
          echo API_KEY=${{ secrets.DATABASE_URL}} >> .env
          echo API_KEY=${{ secrets.PORT}} >> .env
          echo API_KEY=${{ secrets.PROD_URL}} >> .env
          cat .env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
        working-directory: client_two
      - run: npm run build
        working-directory: client_two
        env:
          CI: false
      - run: pm2 delete tweety_client
      - run: pm2 delete tweety_server
      - run: pm2 start npm --name "tweety_client" -- run start
        working-directory: client_two/build
      - run: npm i
        working-directory: ts_server
      - run: pm2 start npm --name "tweety_server" -- run start server.ts
        working-directory: ts_server
      - run: pm2 stop 0
      - run: pm2 start 0
      - run: pm2 stop 1
      - run: pm2 start 1
      - run: pm2 save
      - run: sudo service nginx restart
      - run: pm2 resurrect
