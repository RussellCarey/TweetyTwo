{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/components/create-window/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\nimport ModalContext from \"../../context/modal/ModalContext\";\nimport TextArea from \"./textbox\";\nimport InputsContainer from \"./inputs-container\";\nimport DateTimeInput from \"./input\";\nimport CreateButtons from \"./button\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { EModal } from \"../../context/modal/types\";\nimport { uploadImageFile, uploadTweet } from \"./services/dbServices\";\nimport { checkDateInputs, checkWordCount } from \"../../utils/check-inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 500;\n\n  width: 100vw;\n  height: 150px;\n  padding: ${theme.spacing.space.large} ${theme.spacing.space.xxxlage};\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: ${theme.colors.ui.main};\n  box-shadow: 0 -20px 30px rgba(0, 0, 0, 0.2);\n`;\n_c = Container;\nconst FileInput = styled.input`\n  display: none;\n  opacity: 100%;\n`;\n_c2 = FileInput;\n\nconst CreateWindow = () => {\n  _s();\n\n  const modalContext = useContext(ModalContext);\n  const {\n    showModal\n  } = modalContext;\n  const imageInputElement = useRef();\n  const [file, setFile] = useState();\n  const [tweet, setTweet] = useState({\n    message: \"\",\n    date: \"\",\n    time: \"\"\n  });\n\n  const dataChangeHandler = e => {\n    const target = e.target;\n    const variable = e.target.id;\n    setTweet({ ...tweet,\n      [variable]: target.value\n    });\n  };\n\n  const imageOnClickHandler = () => {\n    imageInputElement.current.click();\n  };\n\n  const imageOnChangeHandler = e => {\n    const target = e.target;\n    setFile(target.files[0]);\n  };\n\n  const uploadImage = async () => {\n    if (!file) return ERequestOutcomes.isEmpty;\n    const uploadImageReq = await uploadImageFile(file);\n    if (uploadImageReq.hasError) return ERequestOutcomes.hasError;\n    return uploadImageReq;\n  }; //! Need to add modal and resposnes from modal..\n\n\n  const handleSubmitClick = async () => {\n    if (!checkWordCount(tweet.message.length)) return showModal(\"Please check your word count\", EModal.hasError);\n    if (!checkDateInputs(tweet.date, tweet.time)) return showModal(\"Please check your date or time\", EModal.hasError);\n    const uploadImageAttempt = await uploadImage();\n    if (uploadImageAttempt === ERequestOutcomes.hasError) return showModal(\"Error creating tweet. Please try again.\", EModal.hasError);\n    const submittedTweet = await uploadTweet(tweet, uploadImageAttempt);\n    if (submittedTweet === ERequestOutcomes.hasError) return showModal(\"Error creating tweet. Please try again.\", EModal.hasError);\n    return showModal(\"Tweet created!\", EModal.isOK);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TextArea, {\n      value: tweet.message,\n      onChange: dataChangeHandler,\n      id: \"message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(DateTimeInput, {\n        type: \"date\",\n        value: tweet.date,\n        onChange: dataChangeHandler,\n        id: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeInput, {\n        type: \"time\",\n        value: tweet.time,\n        onChange: dataChangeHandler,\n        id: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateButtons, {\n        text: file ? file.name : \"add image\",\n        onClick: imageOnClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateButtons, {\n        text: \"submit\",\n        onClick: handleSubmitClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n        id: \"file-select\",\n        type: \"file\",\n        accept: \"image/*\",\n        ref: imageInputElement,\n        onChange: imageOnChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateWindow, \"328+G6Q7onhBOzM0pxsLAfjx844=\");\n\n_c3 = CreateWindow;\nexport default CreateWindow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"FileInput\");\n$RefreshReg$(_c3, \"CreateWindow\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/components/create-window/index.tsx"],"names":["React","useState","useRef","useContext","styled","theme","ModalContext","TextArea","InputsContainer","DateTimeInput","CreateButtons","ERequestOutcomes","EModal","uploadImageFile","uploadTweet","checkDateInputs","checkWordCount","Container","div","spacing","space","large","xxxlage","colors","ui","main","FileInput","input","CreateWindow","modalContext","showModal","imageInputElement","file","setFile","tweet","setTweet","message","date","time","dataChangeHandler","e","target","variable","id","value","imageOnClickHandler","current","click","imageOnChangeHandler","files","uploadImage","isEmpty","uploadImageReq","hasError","handleSubmitClick","length","uploadImageAttempt","submittedTweet","isOK","name"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState, useRef, useContext } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../styles/theme/theme\";\n\nimport ModalContext from \"../../context/modal/ModalContext\";\n\nimport TextArea from \"./textbox\";\nimport InputsContainer from \"./inputs-container\";\nimport DateTimeInput from \"./input\";\nimport CreateButtons from \"./button\";\n\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { EModal } from \"../../context/modal/types\";\nimport { uploadImageFile, uploadTweet } from \"./services/dbServices\";\n\nimport { checkDateInputs, checkWordCount } from \"../../utils/check-inputs\";\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 500;\n\n  width: 100vw;\n  height: 150px;\n  padding: ${theme.spacing.space.large} ${theme.spacing.space.xxxlage};\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: ${theme.colors.ui.main};\n  box-shadow: 0 -20px 30px rgba(0, 0, 0, 0.2);\n`;\n\nconst FileInput = styled.input`\n  display: none;\n  opacity: 100%;\n`;\n\nconst CreateWindow: FunctionComponent = () => {\n  const modalContext = useContext(ModalContext);\n  const { showModal } = modalContext;\n  const imageInputElement = useRef() as React.MutableRefObject<HTMLInputElement>;\n  const [file, setFile] = useState<File | null>();\n  const [tweet, setTweet] = useState({\n    message: \"\",\n    date: \"\",\n    time: \"\",\n  });\n\n  const dataChangeHandler = (e: React.ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    const variable = e.target.id!;\n    setTweet({ ...tweet, [variable]: target.value });\n  };\n\n  const imageOnClickHandler = () => {\n    imageInputElement.current.click();\n  };\n\n  const imageOnChangeHandler = (e: React.ChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    setFile(target.files![0]);\n  };\n\n  const uploadImage = async () => {\n    if (!file) return ERequestOutcomes.isEmpty;\n    const uploadImageReq = await uploadImageFile(file);\n    if (uploadImageReq.hasError) return ERequestOutcomes.hasError;\n    return uploadImageReq;\n  };\n\n  //! Need to add modal and resposnes from modal..\n  const handleSubmitClick = async () => {\n    if (!checkWordCount(tweet.message.length)) return showModal(\"Please check your word count\", EModal.hasError);\n    if (!checkDateInputs(tweet.date, tweet.time)) return showModal(\"Please check your date or time\", EModal.hasError);\n\n    const uploadImageAttempt = await uploadImage();\n    if (uploadImageAttempt === ERequestOutcomes.hasError)\n      return showModal(\"Error creating tweet. Please try again.\", EModal.hasError);\n\n    const submittedTweet = await uploadTweet(tweet, uploadImageAttempt);\n    if (submittedTweet === ERequestOutcomes.hasError)\n      return showModal(\"Error creating tweet. Please try again.\", EModal.hasError);\n\n    return showModal(\"Tweet created!\", EModal.isOK);\n  };\n\n  return (\n    <Container>\n      <TextArea value={tweet.message} onChange={dataChangeHandler} id=\"message\" />\n      <InputsContainer>\n        <DateTimeInput type={\"date\"} value={tweet.date} onChange={dataChangeHandler} id=\"date\" />\n        <DateTimeInput type={\"time\"} value={tweet.time} onChange={dataChangeHandler} id=\"time\" />\n        <CreateButtons text={file ? file.name : \"add image\"} onClick={imageOnClickHandler} />\n        <CreateButtons text={\"submit\"} onClick={handleSubmitClick} />\n        <FileInput\n          id=\"file-select\"\n          type=\"file\"\n          accept=\"image/*\"\n          ref={imageInputElement}\n          onChange={imageOnChangeHandler}\n        />\n      </InputsContainer>\n    </Container>\n  );\n};\n\nexport default CreateWindow;\n"]},"metadata":{},"sourceType":"module"}