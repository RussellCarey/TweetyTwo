{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/TweetyTwo/client_two/src/context/jobs/JobsState.tsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_JOBS } from \"./types\";\nimport \"./types\";\nimport ModalContext from \"./JobsContext\";\nimport ModalReducer from \"./JobsReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobState = props => {\n  _s();\n\n  const state = {\n    jobs: []\n  };\n  const [jobsState, dispatch] = useReducer(ModalReducer, state);\n\n  const getAllJobs = async () => {\n    try {\n      const jobs = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/getAllJobs`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`\n        }\n      });\n      dispatch({\n        action: SET_JOBS,\n        payload: jobs\n      });\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const deletePostByID = async id => {\n    try {\n      const jobDeleting = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/deleteJob`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`\n        },\n        data: {\n          jobID: id\n        }\n      });\n      return jobDeleting;\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      jobsState,\n      getAllJobs,\n      deletePostByID\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobState, \"svD4X4IdJxmNe9tZACzxCKd4Dao=\");\n\n_c = JobState;\nexport default JobState;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobState\");","map":{"version":3,"sources":["/Users/r/Desktop/TweetyTwo/client_two/src/context/jobs/JobsState.tsx"],"names":["useReducer","axios","Cookies","ERequestOutcomes","SET_JOBS","ModalContext","ModalReducer","JobState","props","state","jobs","jobsState","dispatch","getAllJobs","request","method","withCredentials","url","headers","authorization","get","action","payload","error","hasError","deletePostByID","id","jobDeleting","data","jobID","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAe,SAAf;AAEA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AAUA,MAAMC,QAAQ,GAAIC,KAAD,IAAmB;AAAA;;AAClC,QAAMC,KAAkB,GAAG;AACzBC,IAAAA,IAAI,EAAE;AADmB,GAA3B;AAIA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBZ,UAAU,CAACM,YAAD,EAAeG,KAAf,CAAxC;;AAEA,QAAMI,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMH,IAAI,GAAG,MAAMT,KAAK,CAACa,OAAN,CAAc;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,eAAe,EAAE,IAFc;AAG/BC,QAAAA,GAAG,EAAG,2CAHyB;AAI/BC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,GAAEjB,OAAO,CAACkB,GAAR,CAAY,OAAZ,CAAqB;AADhC;AAJsB,OAAd,CAAnB;AASAR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,MAAM,EAAEjB,QAAV;AAAoBkB,QAAAA,OAAO,EAAEZ;AAA7B,OAAD,CAAR;AACD,KAXD,CAWE,OAAOa,KAAP,EAAmB;AACnB,aAAOpB,gBAAgB,CAACqB,QAAxB;AACD;AACF,GAfD;;AAiBA,QAAMC,cAAc,GAAG,MAAOC,EAAP,IAAsB;AAC3C,QAAI;AACF,YAAMC,WAAW,GAAG,MAAM1B,KAAK,CAACa,OAAN,CAAc;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,eAAe,EAAE,IAFqB;AAGtCC,QAAAA,GAAG,EAAG,0CAHgC;AAItCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,GAAEjB,OAAO,CAACkB,GAAR,CAAY,OAAZ,CAAqB;AADhC,SAJ6B;AAOtCQ,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAEH;AADH;AAPgC,OAAd,CAA1B;AAYA,aAAOC,WAAP;AACD,KAdD,CAcE,OAAOJ,KAAP,EAAc;AACd,aAAOpB,gBAAgB,CAACqB,QAAxB;AACD;AACF,GAlBD;;AAoBA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,SADK;AAELE,MAAAA,UAFK;AAGLY,MAAAA;AAHK,KADT;AAAA,cAOGjB,KAAK,CAACsB;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvDD;;GAAMvB,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\nimport axios from \"axios\";\nimport * as Cookies from \"js-cookie\";\nimport { ERequestOutcomes } from \"../../types/errors\";\nimport { SET_JOBS } from \"./types\";\n\nimport {} from \"./types\";\n\nimport ModalContext from \"./JobsContext\";\nimport ModalReducer from \"./JobsReducer\";\n\nexport interface IProps {\n  children: React.ReactNode;\n}\n\ninterface IStateProps {\n  jobs: Array<string> | null;\n}\n\nconst JobState = (props: IProps) => {\n  const state: IStateProps = {\n    jobs: [],\n  };\n\n  const [jobsState, dispatch] = useReducer(ModalReducer, state);\n\n  const getAllJobs = async () => {\n    try {\n      const jobs = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/getAllJobs`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n      });\n\n      dispatch({ action: SET_JOBS, payload: jobs });\n    } catch (error: any) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  const deletePostByID = async (id: string) => {\n    try {\n      const jobDeleting = await axios.request({\n        method: \"POST\",\n        withCredentials: true,\n        url: `http://localhost:3333/api/post/deleteJob`,\n        headers: {\n          authorization: `${Cookies.get(\"token\")}`,\n        },\n        data: {\n          jobID: id,\n        },\n      });\n\n      return jobDeleting;\n    } catch (error) {\n      return ERequestOutcomes.hasError;\n    }\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        jobsState,\n        getAllJobs,\n        deletePostByID,\n      }}\n    >\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default JobState;\n"]},"metadata":{},"sourceType":"module"}